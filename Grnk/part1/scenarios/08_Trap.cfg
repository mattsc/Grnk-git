#textdomain wesnoth-Grnk

[scenario]
    id=08_Trap
    name=_"Trap"
    next_scenario=09_Chaos

    map_data="{~add-ons/Grnk/part1/maps/08_Trap.map}"

    {DEFAULT_SCHEDULE}
    {TURNS 13 11 10}
    victory_when_enemies_defeated=no

    {GRNK_STORY_08}

    [side]
        side=1
        controller=human
        id=Koorzhar
        type=null # just to make wmllint happy

        team_name=Koorzhar
        user_team_name=_"Shmaltupp Army"
        defeat_condition=never

        {GOLD 293 243 243}
        income=0
    [/side]

    [side]
        side=2
        controller=human
        id=Rutburt
        type=null # just to make wmllint happy

        team_name=Rutburt
        user_team_name=_"Bandits"
        defeat_condition=never

        {GOLD 294 244 244}
        income=0
    [/side]

    [side]
        side=3
        controller=ai
        id=Karcyn
        type=null # just to make wmllint happy

        team_name=Karcyn
        user_team_name=_"Undead"
        persistent=yes
        save_id=Karcyn
        defeat_condition=never

        recruit=Orcish Grunt,Orcish Archer,Wolf Rider,Orcish Assassin,Orcish Warrior,Orcish Crossbowman,Skeleton,Skeleton Archer

        {GOLD 361 421 461}

        [ai]
            aggression=1.0
            caution=-10.0
            village_value=0.0
            grouping=no

            [goal]
                name=protect_unit
                [criteria]
                    id=Karcyn
                [/criteria]
                protect_radius=6
                value=100
            [/goal]
        [/ai]
    [/side]
    # 3 Assassins total, and 1 Level 2 unit per turn
    {LIMIT_CONTEMPORANEOUS_RECRUITS 3 "Orcish Assassin" 3}
    {ONE_RECRUIT_PER_TURN 3 (Orcish Warrior,Orcish Crossbowman)}

    [side]
        side=4
        controller=null
        no_leader=yes
        hidden=yes

        team_name=Orcs
        user_team_name=_"Orcs"
        save_id=Orcs

        recruit=Orcish Grunt,Orcish Archer,Orcish Assassin

        {GOLD 137 177 217}

        [ai]
            aggression=1.0
            caution=-10.0
            village_value=0.0
            grouping=no
            leader_aggression=1.0
            leader_caution=-10.0
            number_of_possible_recruits_to_force_recruit=0.0
        [/ai]
    [/side]

    # wmllint: recognize Grnk
    {GRNK_DUMMY_SIDE 5}
    {PEASANT_SIDE 6 "Orcs"}

    [event]
        name=prestart

        # We can clear out the Shmaltupp variables now
        {CLEAR_VARIABLE Shmaltupp,Money,stored_Grnks_wolf,stored_Grnk}

        # Kill Koorzhar's city guards on recall list
        [kill]
            side=1
            role=city guard
            [not]
                x=1-999
            [/not]
        [/kill]

        # Set some variables, including the types for new units (used later)
        {S8_ALLY_VARIABLES $S8.ally_leader}

        # Scouts: 2 Footpads, one quick, one not (no matter which ally we're playing)
        {UNIT $S8.ally_side Footpad 49 18 (
            id=scout1
            [modifications]
                {TRAIT_QUICK}
            [/modifications]
        )}
        {UNIT $S8.ally_side Footpad 49 18 (id=scout2)}
        {STORE_UNIT_VAR id=scout1 name S8.scout1_name}
        {STORE_UNIT_VAR id=scout2 name S8.scout2_name}

        # Bring Grnk to correct side and store away other leader for later
        {GET_GRNK_FROM_DUMMY_SIDE 5 $S8.ally_side}

        # Would like to this:
        #{PUT_TO_RECALL_LIST id=$S8.enemy_leader}
        # However, for some reason a recall inside the Karcyn last_breath event
        # crashes Wesnoth. It does not crash it if I use a moveto event. Suspecting a bug
        # In any case, if I do it this way, it works
        [store_unit]
            [filter]
                id=$S8.enemy_leader
            [/filter]

            kill=yes
            variable=S8.stored_enemy_leader
        [/store_unit]

        # Disable enemy side for now
        [modify_side]
            side=$S8.enemy_side
            controller=null
            hidden=yes
        [/modify_side]

        [modify_unit]
            [filter]
                side=1,2
            [/filter]

            facing=sw
        [/modify_unit]

        # Get Karcyn's skeleton guards out
        [recall]
            side=3
            id=skeleton_guard1
            x,y=15,13
        [/recall]
        [recall]
            side=3
            id=skeleton_guard2
            x,y=15,15
        [/recall]

        [modify_unit]
            [filter]
                side=3
            [/filter]

            facing=se
        [/modify_unit]

        [capture_village]
            side=3
            x,y=8-20,8-20
        [/capture_village]
    [/event]

    [event]
        name=start

        {MESSAGE_GRNK Karcyn "" "" _"Look at those pathetic humans. They seriously think that they can interfere with our Grand Plan."}
        {MESSAGE_GRNK Grnk "" "" _"He's going to run again as soon as we get close. He did so at Lake Teehf also."}

        {IF_VAR S8.ally_leader equals Koorzhar (
            [then]  # with Koorzhar
                {MESSAGE_GRNK Koorzhar "" "" _"I know. I was there.
<i> </i>
This is where you, $S8.scout1_name and $S8.scout2_name here come in."}
                {MESSAGE_GRNK Grnk "" "" _"You're employing Footpads now?"}
                {MESSAGE_GRNK Koorzhar "" "" _"I'm also employing goblins, ain't I?"}
                {MESSAGE_GRNK Grnk "" "" _"Good point."}
                {MESSAGE_GRNK Koorzhar "" "" _"So, $S8.scout1_name and $S8.scout2_name have been following Karcyn for quite some time and ..."}
            [/then]

            [else]  # with Rutburt
                {MESSAGE_GRNK Rutburt "" "" _"So I heard. This is where you, $S8.scout1_name and $S8.scout2_name here come in. The two of them have been following Karcyn for quite some time and ..."}
            [/else]
        )}

        {MESSAGE_GRNK Grnk "" "" _"You know his name?!"}
        {MESSAGE_GRNK $S8.ally_leader "" "" _"Indeed I do. Now, $S8.ally_Grnk, if you'd kindly refrain from interrupting me for a moment ..."}
        {MESSAGE_GRNK $S8.ally_leader "" "" _"We still don't know what the undead are up to, so our instructions are to capture Karcyn alive and bring him to Shmaltupp where he will be interrogated. We strongly suspect that he'll try to run for the mountains in the west the moment we get close. So you, $S8.scout1_name and $S8.scout2_name need to sneak around the crater and get behind him. You need to cut off his escape route until we can get him."}
        {MESSAGE_GRNK Grnk "" "" _"Sounds like a suicide mission to me."}
        {MESSAGE_GRNK $S8.ally_leader "" "" _"Not if we time it right. Speed's essential here. We need to get to Karcyn as quickly as possible from both sides. But let's proceed carefully and try not to get too beaten up, I have another job for you right after this."}
        {MESSAGE_GRNK Grnk "" "" _"I'll keep that in mind."+{NOTE _"Check the objectives notes for intelligence $S8.ally_leader's spies have found out about Karcyn."}}

        {CLEAR_VARIABLE S8.scout1_name,S8.scout2_name}

        [objectives]
            side=$S8.ally_side
            summary=_"<span color='#A050A0'>Capture Karcyn</span>"
            [objective]
                description=_"Defeat Karcyn"
                condition=win
            [/objective]
            [objective]
                description=_"Death of Grnk"
                condition=lose
            [/objective]
            [objective]
                description=_"Death of $S8.ally_leader"
                condition=lose
            [/objective]
            [objective]
                description=_"Karcyn reaches the western edge of the map"
                condition=lose
            [/objective]
            [gold_carryover]
                bonus=no
                carryover_percentage=40
            [/gold_carryover]
            notes_string=_"Notes on Karcyn trying to escape to the west:"
            [note]
                description=_"Karcyn will start running after turns run out. The turn limit will be extended at that time."
            [/note]
            [note]
                description=_"Karcyn will also start running when an enemy unit gets close enough that it might be able to attack him on the next turn."
            [/note]
            [note]
                description=_"Karcyn's skeleton guards go after close enemies. If no enemy is within their attack range, they follow Karcyn."
            [/note]
        [/objectives]
    [/event]

    # Message on Turn 3
    [event]
        name=turn 3

        {MESSAGE_GRNK Grnk "" "" _"Even orcs have legends. One of them deals with the creation of this place. It says that in ancient times a great fiery object fell out of the sky, creating the crater and its unscalable cliffs."}
        {MESSAGE_GRNK Grnk "" "" _"Of course, the wording is slightly different when the orcs tell it. Something like this: 'Long time. Big Fire up there. Over there. Big bang. No climb out.'"}
        {MESSAGE_GRNK Grnk "" "" _"Only orcs can possibly be stupid enough to believe something like that!"}
    [/event]

    # Defeat event when Karcyn gets to the edge of the map
    [event]
        name=moveto
        first_time_only=no

        [filter]
            id=Karcyn
            x=1
        [/filter]

        {MESSAGE_GRNK Karcyn "" "" _"You will never stop us now! Hahahaha ...."}

        {MOVE_UNIT_OFF_MAP Karcyn nw}
        {MOVE_UNIT_TO_EDGE_AND_OFF_MAP skeleton_guard1 $x1 $y1 nw}
        {MOVE_UNIT_TO_EDGE_AND_OFF_MAP skeleton_guard2 $x1 $y1 nw}

        [endlevel]
            result=defeat
        [/endlevel]
    [/event]

    # Orcs don't like skeletons
    [event]
        name=turn 2

        [event]
            name=recruit
            first_time_only=no

            [filter]
                race=undead
            [/filter]

            {GET_RANDOM_UNIT_ID (
                side=3
                race=orc
            )}
            [if]
                [variable]
                    name=random_unit_id
                    not_equals=-1
                [/variable]
                [variable]
                    name=S8.orc_message
                    not_equals=yes
                [/variable]

                [then]
                    {STORE_UNIT_VAR id=$random_unit_id name S8.orc_name}
                    {MESSAGE_GRNK $random_unit_id "" "" _"$S8.orc_name no like skeleton!"}
                    {CLEAR_VARIABLE S8.orc_name}
                    {VARIABLE S8.orc_message yes}
                [/then]
            [/if]
            {CLEAR_VARIABLE random_unit_id}
        [/event]
    [/event]

    # Trigger Karcyn to run west, 2 possible events:
    # 1: on last turn
    [event]
        name=time over

        [modify_turns]
            value=-1
        [/modify_turns]

        [fire_event]
            name=Karcyn_flees
        [/fire_event]
    [/event]

    # 2: when an enemy unit gets within reach (of that unit) hexes of Karcyn
    [event]
        name=moveto
        first_time_only=no
        [allow_undo]
        [/allow_undo]

        [filter]
            side=1,2
        [/filter]

        # See if Karcyn is within reach (theoretically; without enemies in the way; filtered by vision)
        [store_reachable_locations]
            [filter]
                id=$unit.id
            [/filter]
            [filter_location]
                [filter]
                    id=Karcyn
                [/filter]
            [/filter_location]
            moves=max
            range=vision

            variable=S8.Kreach_locs
        [/store_reachable_locations]

        {IF_VAR S8.Kreach_locs.length not_equals 0 (
            [then]
                [fire_event]
                    name=Karcyn_flees
                [/fire_event]
            [/then]
        )}
        {CLEAR_VARIABLE S8.Kreach_locs}
    [/event]

    # Karcyn starts running west
    [event]
        name=Karcyn_flees

        {MESSAGE_GRNK Karcyn "" "" _"This battle is not going as I expected. I better head back and report to the Master."}

        [event]
            name=side 3 turn refresh  # make sure it happens after trigger
            first_time_only=no

            [store_reachable_locations]
                [filter]
                    id=Karcyn
                [/filter]
                [filter_location]
                    [not]  # must be unoccupied, including by himself
                        [filter]
                        [/filter]
                    [/not]
                [/filter_location]
                moves=max

                variable=S8.Karcyn_hexes
            [/store_reachable_locations]
            #{DEBUG "Storing locations: $S8.Karcyn_hexes.length"}

            # Setting goto_x,goto_y does not always take effect until next turn, so we move him directly
            {IF_VAR S8.Karcyn_hexes.length not_equals 0 (
                [then]
                    # Find the hexes with minimum (western-most) x coordinates
                    # As locations are sorted by ascending x coordinate,
                    # We can simply start at beginning and go until it changes
                    {VARIABLE S8.i_w 0}
                    [while]
                        {VARIABLE_CONDITIONAL S8.i_w less_than $S8.Karcyn_hexes.length}
                        {VARIABLE_CONDITIONAL S8.Karcyn_hexes[$S8.i_w].x equals $S8.Karcyn_hexes[0].x}
                        [do]
                            {VARIABLE_OP S8.i_w add 1}
                        [/do]
                    [/while]

                    # Now choose one of those at random
                    {RANDOM "1..$S8.i_w"}
                    #{DEBUG "Possible min-x hexes: $S8.i_w — chosen: $random"}
                    {VARIABLE_OP random sub 1}

                    [move_unit]
                        id=Karcyn
                        to_x,to_y=$S8.Karcyn_hexes[$random].x,$S8.Karcyn_hexes[$random].y
                        fire_event=yes
                    [/move_unit]
                    {MODIFY_UNIT id=Karcyn moves 0}
                    {CLEAR_VARIABLE S8.i_w,random}
                [/then]
            )}

            # Skeleton guards: if they have an enemy within reach, we'll let them do what they want
            # (the ai_special=guardian will be overridden then),
            # otherwise we make them follow Karcyn

            # This is to make it work whether Karcyn moved or not this turn
            {STORE_UNIT_VAR id=Karcyn x S8.Karcyn_x}
            {STORE_UNIT_VAR id=Karcyn y S8.Karcyn_y}

            [store_unit]
                [filter]
                    id=skeleton_guard1,skeleton_guard2
                [/filter]

                kill=no
                mode=append
                variable=S8.stored_guards
            [/store_unit]

            {FOREACH S8.stored_guards S8.i_g}
                # Find hexes that have an enemy within attack range
                [store_reachable_locations]
                    [filter]
                        id=$S8.stored_guards[$S8.i_g].id
                    [/filter]
                    [filter_location]
                        [filter]
                            side=1,2
                        [/filter]
                    [/filter_location]
                    moves=max
                    range=attack

                    variable=S8.tmp_locs
                [/store_reachable_locations]
                #{DEBUG "$S8.stored_guards[$S8.i_g].id: storing locations with enemy in attack range: $S8.tmp_locs.length"}

                {IF_VAR S8.tmp_locs.length equals 0 (
                    [then]  # If no enemy close, skeleton guards go with Karcyn
                        #{DEBUG "Make $S8.stored_guards[$S8.i_g].id go next to Karcyn"}
                        # The first of the two goes in the ne, the second in the se
                        {IF_VAR S8.i_g equals 0 (
                            [then]
                                {VARIABLE S8.dir sw}
                            [/then]

                            [else]
                                {VARIABLE S8.dir ne}
                            [/else]
                        )}

                        [store_locations]
                            [filter_adjacent_location]
                                x,y=$S8.Karcyn_x,$S8.Karcyn_y
                                adjacent=$S8.dir
                            [/filter_adjacent_location]

                            variable=S8.adj_locs
                        [/store_locations]
                        #{DEBUG "  $S8.i_g: $S8.dir: $S8.adj_locs.x $S8.adj_locs.y"}

                        {MODIFY_UNIT id=$S8.stored_guards[$S8.i_g].id goto_x $S8.adj_locs.x}
                        {MODIFY_UNIT id=$S8.stored_guards[$S8.i_g].id goto_y $S8.adj_locs.y}
                    [/then]

                    [else]  # If enemy close, AI handles skeleton guards
                        #{DEBUG "Let $S8.stored_guards[$S8.i_g].id go where he wants"}
                        # In this case, we just delete any goto's that might still be left over
                        {MODIFY_UNIT id=$S8.stored_guards[$S8.i_g].id goto_x ()}
                        {MODIFY_UNIT id=$S8.stored_guards[$S8.i_g].id goto_y ()}
                    [/else]
                )}
            {NEXT S8.i_g}

            {CLEAR_VARIABLE S8.Karcyn_hexes,S8.Karcyn_x,S8.Karcyn_y,S8.stored_guards,S8.tmp_locs}
        [/event]
    [/event]

    # When Karcyn defeated, set up the trap
    [event]
        name=last breath

        [filter]
            id=Karcyn
        [/filter]

        # All units except for Grnk will be stored away next, so need to do the following
        # Apparently, it needs to be done for Grnk to, the events (moving) interrupt the experience points
        {GIVE_KILL_EXPERIENCE_BEFORE_STORE $second_unit.id $unit.level}

        {MESSAGE_GRNK Karcyn "" "" _"Did you really think that you can capture me that easily? You will never stop the Grand Plan! Hahahaha ..."}

        # Move Karcyn and his skeleton guards onto his recall list;
        # Empty his recall list first, just in case somebody is left
        [kill]
            side=3
            [not]
                x=1-999
            [/not]
        [/kill]

        # Then put Karcyn and guards on it, disappear in a smoke puff
        [store_unit]
            [filter]
                id=Karcyn,skeleton_guard1,skeleton_guard2
            [/filter]
            variable=S8.Karcyn_units
            mode=append
            kill=no
        [/store_unit]
        {FOREACH S8.Karcyn_units S8.i}
            {FULL_HEAL_AND_CURE id=$S8.Karcyn_units[$S8.i].id}
            {FIREBALL_OUT_HIDE $S8.Karcyn_units[$S8.i].id "~GS()"}
            {PUT_TO_RECALL_LIST id=$S8.Karcyn_units[$S8.i].id}
        {NEXT S8.i}
        {CLEAR_VARIABLE S8.Karcyn_units,S8.i}

        {MESSAGE_GRNK $S8.ally_leader "" "" _"How the hell did he do that?!"}
        {MESSAGE_GRNK Grnk "" "" _"And what did he mean with Grand Plan?"}
        {MESSAGE_GRNK $S8.ally_leader "" "" _"Well, that's what we're trying to find out. It didn't quite work as planned, but it does confirm that there is something bigger going on. Now, $S8.ally_Grnk, I have another job for you."}
        {MESSAGE_GRNK $S8.ally_leader "" "" _"Go to Shmaltupp and tell $S8.enemy_leader that we captured Karcyn but cannot bring him to town because he is badly injured and wouldn't survive the trip. Lead $S8.enemy_leader into the crater where we will take care of him once and for all."}
        {MESSAGE_GRNK Grnk "" "" _"What??? We are in the middle of a crisis and you are going to destroy each other?!"}
        {MESSAGE_GRNK $S8.ally_leader "" "" _"What better time is there? $S8.enemy_leader won't suspect a thing and he has become entirely intolerable. It's high time we got rid of him. Now, you can either do as I tell you or go back and live with the orcs. All you have to do is lead $S8.enemy_leader into the crater and run off to the west. We will take care of the rest."}
        {MESSAGE_GRNK Grnk "" "" {GASP_BEGINNING _"grumbles"}+{WHISPER _"I've really had it with you humans!"}}

        # Blacks out the screen to change maps
        [modify_side]
            side=$S8.ally_side
            shroud=yes
        [/modify_side]
        {REDRAW 5} # no typo

        # Most likely this has happened already, but it is theoretically possible for it to be skipped
        [modify_turns]
            value=-1
        [/modify_turns]

        # Heal and cure everybody first
        {FULL_HEAL_AND_CURE side=$S8.ally_side}
        # Switch Grnk over to the "other ally" (=enemy) side
        {MODIFY_UNIT id=Grnk side $S8.enemy_side}
        # Put all units on current ally's side
        {PUT_TO_RECALL_LIST side=$S8.ally_side}

        # Modify all the sides
        [modify_side]
            side=$S8.ally_side
            controller=null
            hidden=yes
        [/modify_side]

        [modify_side]
            side=$S8.enemy_side
            controller=human
            hidden=no
        [/modify_side]

        [modify_side]
            side=3
            controller=null
            hidden=yes
        [/modify_side]

        # And kill all of Karcyn's units that might still be out there
        [kill]
            side=3
            x=1-999
        [/kill]

        # Get the enemy_leader out here
        [unstore_unit]
            variable=S8.stored_enemy_leader
            x,y=36,16
        [/unstore_unit]

        # Grnk
        {MOVE_UNIT id=Grnk 35 17}
        # Turn control over to new side
        [end_turn]
        [/end_turn]

        # Also get the 5 best units off the recall list
        {REPEAT 5 (
            {RECALL_BEST_UNIT $S8.enemy_side () 36 16 (W*,*^X*) "$S8.enemy_side_new_units" ()}
        )}
        {CLEAR_VARIABLE new_unit_id}

        [modify_unit]
            [filter]
                side=1,2
            [/filter]

            facing=sw
        [/modify_unit]

        # Keeps were destroyed in the meantime
        {MODIFY_TERRAIN Co^Dr 14 14}
        {MODIFY_TERRAIN Ce^Dr 46 19}

        [dialog_message]
            message=_"After a hasty trip to Shmaltupp"
        [/dialog_message]

        # Bring screen back on new map
        [modify_side]
            side=$S8.ally_side
            shroud=no
        [/modify_side]
        [redraw]
        [/redraw]

        {MESSAGE_GRNK $S8.enemy_leader "" "" _"Interesting."}

        [objectives]
            side=$S8.enemy_side
            summary=_"<span color='#A050A0'>Lead $S8.enemy_leader Into The Trap</span>"
            [objective]
                description=_"Move farther into the crater"
                condition=win
            [/objective]
            [objective]
                description=_"Death of Grnk"
                condition=lose
            [/objective]
            [gold_carryover]
                bonus=no
                carryover_percentage=40
            [/gold_carryover]
        [/objectives]

        # For some reason (probably because of all that switching of sides,
        # The message option gives a 'game out of sync' error if we just do the rest
        # inside this event. So instead, we do this with a select event
        # That sorts out the syncing, and gives us a chance to look around before choosing sides

        [event]
            name=exit_hex

            {MESSAGE_GRNK $S8.enemy_leader "" "" _"So where are you holding that sorcerer?"}
            [message]
                speaker=Grnk
                caption=_"It's decision time. Whom do I betray?"

                [option]
                    message=_"In the castle on the other side of the crater"
                    [command]
                        {MESSAGE_GRNK $S8.enemy_leader "" "" _"Is that so? You didn't think that I would believe something like that without sending out my own scouts, did you? Drive those rats out of their holes, $S8.enemy_troops!"}

                        # Grnk moves back to ally_side.
                        # Meaning of 'ally' and 'enemy' same as in first part of scenario
                        {MODIFY_UNIT id=Grnk side $S8.ally_side}
                        # We also need to end the current turn, to switch Grnk over again
                        [end_turn]
                        [/end_turn]

                        {SCROLL_TO 16 16}
                        {RECALL_BEST_UNIT $S8.enemy_side () 15 14 () "$S8.enemy_side_new_units" (facing=se)}
                        {RANDOM_UNIT $S8.enemy_side "$S8.enemy_side_new_units" 14 15 (facing=se)}
                        {RANDOM_UNIT $S8.enemy_side "$S8.enemy_side_new_units" 15 13 (facing=se)}
                        {MOVE_UNIT id=$new_unit_id 15 16}
                        [recall]
                            id=$S8.ally_leader
                            x,y=16,16
                        [/recall]
                        {MESSAGE_FACING $S8.ally_leader $new_unit_id "" _"Crap!"}

                        {SCROLL_TO 17 10}
                        {RANDOM_UNIT $S8.enemy_side "$S8.enemy_side_new_units" 17 10 (facing=se)}
                        {RECALL_BEST_UNIT $S8.ally_side () 18 10 () "$S8.ally_side_new_units" (facing=nw)}
                        {MESSAGE_GRNK $new_unit_id "" "" _"Crap!"}

                        {SCROLL_TO 25 9}
                        {RANDOM_UNIT $S8.enemy_side "$S8.enemy_side_new_units" 25 9 (facing=se)}
                        {RECALL_BEST_UNIT $S8.ally_side () 26 9 () "$S8.ally_side_new_units" (facing=nw)}
                        {MESSAGE_GRNK $new_unit_id "" "" _"Crap!"}

                        {SCROLL_TO 37 10}
                        {RANDOM_UNIT $S8.enemy_side "$S8.enemy_side_new_units" 37 10 (facing=sw)}
                        {RECALL_BEST_UNIT $S8.ally_side () 36 10 () "$S8.ally_side_new_units" (facing=ne)}
                        {MESSAGE_GRNK $new_unit_id "" "" _"Crap!"}

                        {SCROLL_TO 41 13}
                        {RANDOM_UNIT $S8.enemy_side "$S8.enemy_side_new_units" 41 13 (facing=sw)}
                        {RECALL_BEST_UNIT $S8.ally_side () 40 13 () "$S8.ally_side_new_units" (facing=ne)}
                        {MESSAGE_GRNK $new_unit_id "" "" _"Rats!"}

                        {SCROLL_TO 37 24}
                        {RANDOM_UNIT $S8.enemy_side "$S8.enemy_side_new_units" 37 24 (facing=nw)}
                        {RECALL_BEST_UNIT $S8.ally_side () 37 23 () "$S8.ally_side_new_units" (facing=sw)}
                        {MESSAGE_GRNK $new_unit_id "" "" _"Crap!"}

                        {CLEAR_VARIABLE new_unit_id}

                        {MESSAGE_GRNK $S8.ally_leader "" "" _"Run!"}
                        {MOVE_UNIT id=$S8.ally_leader 25 15}
                        {MOVE_UNIT id=Grnk 26 14}
                        {MOVE_UNIT (x,y=18,10) 25 14}
                        {MOVE_UNIT (x,y=17,10) 18 11}
                        {MOVE_UNIT (x,y=26,9) 26 13}
                        {MOVE_UNIT (x,y=25,9) 26 9}
                        {MOVE_UNIT (x,y=36,10) 27 14}
                        {MOVE_UNIT (x,y=37,10) 33 12}
                        {MOVE_UNIT (x,y=40,13) 27 15}
                        {MOVE_UNIT (x,y=41,13) 37 14}
                        {MOVE_UNIT (x,y=37,23) 28 14}
                        {MOVE_UNIT (x,y=37,24) 36 20}
                    [/command]
                [/option]

                [option]
                    message=_"Actually, he escaped. $S8.ally_leader sent me to lead you into a trap."
                    [command]
                        # In this case, we need to switch ally vs. enemy
                        {S8_ALLY_VARIABLES $S8.enemy_leader}

                        # Put all the enemy units out there
                        [recall]
                            id=$S8.enemy_leader
                            x,y=39,19
                        [/recall]
                        {MESSAGE_GRNK $S8.enemy_leader "" "" _"I knew that I could not trust you. Come out, $S8.enemy_troops!"}

                        {REPEAT 6 (
                            {RECALL_BEST_UNIT $S8.enemy_side () 40 17 (W*,*^X*,R*,G*) "$S8.enemy_side_new_units" (facing=sw)}
                        )}

                        {RANDOM_UNIT $S8.enemy_side "$S8.enemy_side_new_units" 40 21 (facing=sw)}
                        {RANDOM_UNIT $S8.enemy_side "$S8.enemy_side_new_units" 39 22 (facing=sw)}
                        {RANDOM_UNIT $S8.enemy_side "$S8.enemy_side_new_units" 39 16 (facing=sw)}
                        {RANDOM_UNIT $S8.enemy_side "$S8.enemy_side_new_units" 40 15 (facing=sw)}
                        {RANDOM_UNIT $S8.enemy_side "$S8.enemy_side_new_units" 40 13 (facing=sw)}
                        {RANDOM_UNIT $S8.enemy_side "$S8.enemy_side_new_units" 36 11 (facing=sw)}
                        {CLEAR_VARIABLE new_unit_id}

                        {MESSAGE_GRNK $S8.ally_leader "" "" _"Crap!"}
                        {MESSAGE_GRNK $S8.ally_leader "" "" _"Run!"}
                        {MOVE_UNIT side=$S8.ally_side 30 14}
                    [/command]
                [/option]
            [/message]

            {MESSAGE_GRNK $S8.ally_leader "" "" _"Now look at the mess you've gotten us into. Leave it to a goblin ..."}
            {MESSAGE_GRNK Grnk "" "" {GASP _"grumbles"}}
            {MESSAGE_GRNK $S8.enemy_leader "" "" _"Let's get them, $S8.enemy_troops. Leave no-one alive."}

            # Set up the sides correctly
            [modify_side]
                side=$S8.ally_side
                controller=human
                hidden=no
            [/modify_side]
            [modify_side]
                side=$S8.enemy_side
                controller=ai
                hidden=no
                [ai]
                    aggression=1.0
                    caution=-10.0
                    village_value=0.0
                    grouping=no
                    leader_aggression=1.0
                    leader_caution=-10.0
                [/ai]
            [/modify_side]

            {MOVE_UNIT id=$S8.enemy_leader 42 20}

            [modify_unit]
                [filter]
                    id=$S8.enemy_leader
                [/filter]

                facing=sw
            [/modify_unit]

            # The enemy leader only sits and watches, does not participate in the fight
            [event]
                name=side 1 turn refresh,side 2 turn refresh
                # Don't know why this does not work with $S8.enemy_side variable
                first_time_only=no

                {MODIFY_UNIT id=$S8.enemy_leader moves 0}
            [/event]

            [objectives]
                side=$S8.ally_side
                summary=_"<span color='#A050A0'>Survive</span>"
                [objective]
                    description=_"Defeat all of $S8.enemy_leader's units"
                    condition=win
                [/objective]
                [objective]
                    description=_"Death of Grnk"
                    condition=lose
                [/objective]
                [objective]
                    description=_"Death of $S8.ally_leader"
                    condition=lose
                [/objective]
                [gold_carryover]
                    bonus=no
                    carryover_percentage=40
                [/gold_carryover]
            [/objectives]
        [/event]

        # When only 3 enemies are left (in second half), their leader will go back to Shmaltupp
        [event]
            name=die

            [filter]
                side=$S8.enemy_side
            [/filter]
            [filter_condition]
                [not]
                    [have_unit]
                        side=$S8.enemy_side
                        count=4-999
                    [/have_unit]
                [/not]
            [/filter_condition]

            [kill]
                id=$unit.id
            [/kill]

            [fire_event]
                name=enemy_leader_leaves
            [/fire_event]
        [/event]

        # Or if enemy leader is attacked directly, he heads back too
        # He cannot be the last unit, as he would have left before, so don't need to trigger return trip
        [event]
            name=attack

            [filter_second]
                id=$S8.enemy_leader
            [/filter_second]

            [fire_event]
                name=enemy_leader_leaves
            [/fire_event]
        [/event]

        # Here's the enemy leader leaves event
        [event]
            name=enemy_leader_leaves

            {MESSAGE_GRNK $S8.enemy_leader "" "" _"I better head back to Shmaltupp."}
            {MOVE_UNIT id=$S8.enemy_leader 50 18}
            {MOVE_UNIT_OFF_MAP_HIDE $S8.enemy_leader ne}
            {PUT_TO_RECALL_LIST id=$S8.enemy_leader}
            {MESSAGE_GRNK $S8.ally_leader "" "" _"Coward!"}
        [/event]

        # When last enemy dies (in second half), trigger the return map
        [event]
            name=die

            [filter]
                side=$S8.enemy_side
            [/filter]
            [filter_condition]
                [not]
                    [have_unit]
                        side=$S8.enemy_side
                    [/have_unit]
                [/not]
            [/filter_condition]

            [kill]
                id=$unit.id
            [/kill]

            # The moving of the units later means that it doesn't get the kill experience, thus:
            {GIVE_KILL_EXPERIENCE_BEFORE_STORE $second_unit.id $unit.level}

            [fire_event]
                name=return_trip
            [/fire_event]
        [/event]
    [/event]

    [event]
        name=return_trip

        # All enemies are gone, disable side
        [modify_side]
            side=$S8.enemy_side
            controller=null
            hidden=yes
        [/modify_side]

        {MESSAGE_GRNK $S8.ally_leader "" "" _"Let's head back to Shmaltupp."}

        # Put an end_turn here - it's a cheap way of restoring everybody's moves
        [end_turn]
        [/end_turn]

        # Blacks out the screen to change maps
        [modify_side]
            side=$S8.ally_side
            shroud=yes
        [/modify_side]
        {REDRAW 5} # no typo

        [replace_map]
            map="{~add-ons/Grnk/part1/maps/08_Trap_return.map}"
            expand=yes
        [/replace_map]

        # Bring out the Side 4 orc leader
        {NEW_LEADER_APPEARS 4 (Orcish Leader) 3 3 orc_leader ()}

        # whofield clear NEW_LEADER_APPEARS

        {MOVE_UNIT side=$S8.ally_side 11 27}
        [modify_unit]
            [filter]
                side=$S8.ally_side
            [/filter]

            facing=se
        [/modify_unit]

        {SCROLL_TO 11 27}

        {IF_VAR S8.ally_leader equals Koorzhar (
            [then]
                {UNIT $S8.ally_side Spearman 17 24 (id,facing=scout3,sw)}
            [/then]

            [else]
                {UNIT $S8.ally_side Footpad 17 24 (id,facing=scout3,sw)}
            [/else]
        )}

        [dialog_message]
            message=_"A short while later"
        [/dialog_message]

        # Bring screen back on new map
        [modify_side]
            side=$S8.ally_side
            shroud=no
        [/modify_side]
        {REDRAW 1}

        {CLOSE_EMPTY_HEX 12 26 () 0}
        {MOVE_UNIT_ALONG_PATH scout3 13 26 $hex_x $hex_y sw}
        {CLEAR_VARIABLE hex_x,hex_y}

        {IF_VAR S8.ally_leader equals Koorzhar (
            [then]
                {STORE_UNIT_VAR id=Koorzhar language_name S8.Koorzhar_type}
                {MESSAGE_FACING scout3 Koorzhar "" _"$S8.Koorzhar_type Koorzhar. Good to see you. There've been rumors in Shmaltupp about a battle between you and Rutburt."}
                {CLEAR_VARIABLE S8.Koorzhar_type}
            [/then]

            [else]
                {MESSAGE_FACING scout3 Rutburt "" _"Hello, Rutburt. Good to see you. There've been rumors in Shmaltupp about a battle between you and Koorzhar."}
            [/else]
        )}

        {STORE_UNIT_VAR id=scout3 name S8.scout3_name}
        {MESSAGE_GRNK $S8.ally_leader "" "" _"Already? That's not good. Let's hurry back to Shmaltupp and assure everybody that those are just rumors. Nothing happened here."}
        {MESSAGE_FACING Grnk $S8.ally_leader "" _"But ..."}
        {MESSAGE_GRNK $S8.ally_leader "" "" _"Quiet, $S8.ally_Grnk! Nothing happened here. We just ran into some orcs, is that understood?"}
        {MESSAGE_GRNK Grnk "" "" {GASP _"grumbles"}}
        {MESSAGE_GRNK $S8.ally_leader "" "" _"$S8.scout3_name, how does it look between here and Shmaltupp?"}
        {MESSAGE_GRNK scout3 "" "" _"The area's entirely deserted. There's only that tiny orc camp up there in the northwest. Everybody else seems to have disappeared."}
        {MESSAGE_GRNK $S8.ally_leader "" "" _"That's good news, at least. We should be able to outrun them orcs easily. Let's go."}
        {CLEAR_VARIABLE S8.scout3_name}

        {SET_LABEL 48 12 _"To Shmaltupp"}
        {PLACE_IMAGE scenery/signpost.png 48 12}

        # The turn limit is changed to give just enough time to go to Shmaltupp
        [modify_turns]
            value="$($turn_number+8)"
        [/modify_turns]

        # Start the peasant events
        {VARIABLE S8.Grnk_had_enough yes}
        {PEASANT_EVENTS 6 $S8.ally_side "*^Vh*" "1..2"}

        [objectives]
            side=$S8.ally_side
            summary=_"<span color='#A050A0'>Return To Shmaltupp</span>"
            [objective]
                description=_"Move $S8.ally_leader to the signpost in the east"
                condition=win
            [/objective]
            [objective]
                description=_"Death of Grnk"
                condition=lose
            [/objective]
            [objective]
                description=_"Death of $S8.ally_leader"
                condition=lose
            [/objective]
            {TURNS_RUN_OUT}
            [gold_carryover]
                bonus=no
                carryover_percentage=40
            [/gold_carryover]
        [/objectives]

        # If the leader gets to the signpost without anybody having attacked a peasant
        # we trigger it manually
        [event]
            name=moveto

            [filter]
                id=$S8.ally_leader
                x,y=48,12
            [/filter]

            {CLOSE_EMPTY_HEX 47 13 (*^V*) 0}
            [move_unit_fake]
                type=Peasant
                side=6
                x=48,$hex_x
                y=13,$hex_y
            [/move_unit_fake]
            {UNIT 6 Peasant $hex_x $hex_y (id=last_peasant)}
            {CLEAR_VARIABLE hex_x,hex_y}

            {MESSAGE_FACING $S8.ally_leader last_peasant "" _"Those damned peasants are really getting on my nerves. Take that!"}
            {MESSAGE_FACING Grnk $S8.ally_leader "" _"No, don't ..."}

            # Battle between leader and Peasant
            # Only do one hit (a miss), before Grnk interferes
            {ATTACK_DEFENSE_ANIMATION id=$S8.ally_leader id=last_peasant melee no ""}

            {MESSAGE_GRNK Grnk "" "" _"Stop!!!"}
            # Trigger the attack event
            [fire_event]
                name=S8_done

                [primary_unit]
                    id=$S8.ally_leader
                [/primary_unit]
            [/fire_event]
        [/event]
    [/event]

    # End of the scenario, when Grnk turns peasant attacker's hand to stone
    # This is triggered either above, when ally_leader gets to sign post
    # or from within the peasant events (on normal attack on peasant_
    [event]
        name=S8_done

        # Move Grnk next to attacker
        {CLOSE_EMPTY_HEX $x1 $y1 (Wo,*^X*,*^V*) 1}
        {MOVE_UNIT id=Grnk $hex_x $hex_y}

        [adjust_facing]
            id=Grnk
            second_id=$unit.id
        [/adjust_facing]

        {BOOMING_VOICE_EFFECT_GRNK Grnk _"DON'T DO THAT !!!" $x1 $y1 0.35 ()}
        {WHITE_MISSILE $unit.id "~GS()~CS(0,-50,0)"}
        {MESSAGE_GRNK $unit.id "" "" _"Aaaahhh!!! My hand!!!!!"}

        # Wolf runs away, Grnk becomes Confused Grnk
        [store_unit]
            [filter]
                id=Grnk
            [/filter]

            variable=tmp_Grnk
            kill=yes
        [/store_unit]

        [switch]
            variable=tmp_Grnk.level

            [case]
                value=1

                {VARIABLE wolf_type "Wolf"}
            [/case]

            [case]
                value=2

                {VARIABLE wolf_type "Great Wolf"}
            [/case]

            [else]
                value=3

                {VARIABLE wolf_type "Direwolf"}
            [/else]
        [/switch]

        {UNIT $S8.ally_side "Confused Grnk" $hex_x $hex_y (
            id=Grnk
            name=Confused Grnk
            gender=male
            unrenamable=yes
            facing=sw

            [modifications]
                {TRAIT_QUICK}
            [/modifications]
        )}

        # Wolf runs away
        {SOUND wolf-die-1.ogg}
        [move_unit_fake]
            type=$wolf_type
            side=$S8.ally_side
            x=$hex_x,1
            y=$hex_y,25
        [/move_unit_fake]
        {CLEAR_VARIABLE hex_x,hex_y}

        {UNIT $S8.ally_side $wolf_type 1 25 (id,facing=tmp_wolf,nw)}
        {MOVE_UNIT_OFF_MAP tmp_wolf nw}

        {CLEAR_VARIABLE tmp_Grnk,wolf_type}

        {MESSAGE_GRNK Grnk "" "" _"No, wait, little puppy. Where are you going?"}
        {MESSAGE_FACING $unit.id Grnk "" _"My hand!!! My hand!!! What the hell did you do?!?"}
        {MESSAGE_GRNK Grnk "" "" _"I ... I don't know ..."}
        {MESSAGE_GRNK $unit.id "" "" _"My hand!!! I cannot feel it any more! It's hard! It's turned to stone!!! How???"}
        {MESSAGE_GRNK Grnk "" "" _"I really don't know."}
        {MESSAGE_GRNK $unit.id "" "" _"He turned my hand to stone!! Get him!!!"}
        {MESSAGE_GRNK Grnk "" "" _"Uh oh."}

        # Store attacking unit for later
        [store_unit]
            [filter]
                id=$unit.id
            [/filter]

            kill=no
            variable=stored_stonehand
        [/store_unit]

        {MOVE_UNIT id=Grnk 11 1}
        {MOVE_UNIT_OFF_MAP_HIDE Grnk n}
        {MOVE_GRNK_TO_DUMMY_SIDE 5}
        # Don't need to undo loyal, as he is an entirely new unit now
        [hide_unit]
            id=Grnk
        [/hide_unit]

        # Take away all his stuff (except for gold)
        {CLEAR_VARIABLE inventory,peasants}
        {CLEAR_MENU_INVENTORY}
        {CLEAR_MENU_HEALING}

        # House cleaning
        {CLEAR_VARIABLE S8}

        [dialog_message]
            message=_"You have escaped!"
        [/dialog_message]

        [endlevel]
            result=victory
            bonus=no
            carryover_report=no
            carryover_add=yes
            carryover_percentage=40
            linger_mode=yes
        [/endlevel]
    [/event]

    ######################
    # Finally, the standard events for all or most scenarios
    {STORY_IMAGE id=Grnk}
    {HEALING_POTION_MESSAGE}
    {KOORZHAR_MAKES_GENERAL}
    {GRNK_DEATH}
    {RUTBURT_DEATH}
    {KOORZHAR_DEATH}
[/scenario]
