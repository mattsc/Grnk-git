#textdomain wesnoth-Grnk

######################
# Rock Walker macros #
######################

#define PLACE_ROCK_WALKER FACING
    # Put a rock walker unit on the map
    # This is not a stand-alone macro, to be called from
    # PLACE_ROCK_WALKER_FROM_UNIT or PLACE_ROCK_NEW WALKER only

    {VARIABLE tmp_walker.facing {FACING}}

    [unit]
        id=rock_walker
        type=Invisible Unit
        facing={FACING}

        x,y=$tmp_walker.x,$tmp_walker.y
        side=$tmp_walker.side
        canrecruit=$tmp_walker.canrecruit
        max_hitpoints=$tmp_walker.max_hitpoints
        hitpoints=$tmp_walker.hitpoints
        max_experience=$tmp_walker.max_experience
        experience=$tmp_walker.experience

        [modifications]
            [object]
                [effect]
                    apply_to=new_animation
                    [extra_anim]
                        flag=emerge
                        alpha=0~0.3:600,0.3~1:400
                        offset=0~1:1000
                        [frame]
                            image=$tmp_walker.image:1000
                        [/frame]
                    [/extra_anim]
                [/effect]
            [/object]
        [/modifications]
    [/unit]
#enddef

#define PLACE_ROCK_WALKER_FROM_UNIT ID FACING
    # Replace an existing unit on the map with a Rock Walker of the same type
    # (usually this is done in a prestart event)
    # Needs to be done in combination with EMERGE_ROCK_WALKER
    # @ID: the id of the unit to be replaced by the rock walker
    # @FACING: facing direction - the animation will be shown in this direction

    [store_unit]
        [filter]
            id={ID}
        [/filter]

        kill=yes
        variable=tmp_walker
    [/store_unit]

    {PLACE_ROCK_WALKER {FACING}}
#enddef

#define PLACE_ROCK_WALKER_FROM_VARIABLE VARIABLE X Y FACING
    # Take information from a unit variable and place a Rock Walker of the same
    # type and properties on the map.
    # (this can be done outside prestart event, when the unit should not
    # become visible on the map first)
    # Needs to be done in combination with EMERGE_ROCK_WALKER
    # @VARIABLE: name of the unit variable to be used
    # @X,@Y: hex where to place the rockwalker
    # @FACING: facing direction - the animation will be shown in this direction

    [unit]
        type=${VARIABLE}.type
        x={X}
        y={Y}
        side=${VARIABLE}.side
        canrecruit=${VARIABLE}.canrecruit
        max_hitpoints=${VARIABLE}.max_hitpoints
        hitpoints=${VARIABLE}.hitpoints
        max_experience=${VARIABLE}.max_experience
        experience=${VARIABLE}.experience
        image=${VARIABLE}.image

        to_variable=tmp_walker
    [/unit]

    {PLACE_ROCK_WALKER {FACING}}
#enddef

#define PLACE_NEW_ROCK_WALKER FACING UNIT_WML
    # Put a new unit on the map as a Rock Walker
    # (this can be done outside prestart event, when the unit should not
    # become visible on the map first)
    # Needs to be done in combination with EMERGE_ROCK_WALKER
    # @ID: the id of the unit to be replaced by the rock walker
    # @FACING: facing direction - the animation will be shown in this direction

    [unit]
        {UNIT_WML}
        to_variable=tmp_walker
    [/unit]

    {PLACE_ROCK_WALKER {FACING}}
#enddef

#define EMERGE_ROCK_WALKER X Y
    # This needs to be done in combination with one of the PLACE_ROCK_* macros
    # @X,@Y: the hex where the rock walker emerges; could be calculated
    #  from @FACING of previous macro, but easier this way

    # Now make the unit visible (so that the animation can be seen)
    # Cannot use [role] here (or at least I did not get it to work)
    [modify_unit]
        [filter]
            id=rock_walker
        [/filter]

        role=IU_visible
    [/modify_unit]

    [animate_unit]
        [filter]
            id=rock_walker
        [/filter]
        flag=emerge
    [/animate_unit]

    [kill]
        id=rock_walker
    [/kill]

    [unstore_unit]
        variable=tmp_walker
        x,y={X},{Y}
    [/unstore_unit]

    {CLEAR_VARIABLE tmp_walker}
#enddef

#define MOVE_INTO_ROCK ID FACING VAR_NAME
    [modify_unit]
        [filter]
            id={ID}
        [/filter]

        facing={FACING}
    [/modify_unit]

    [store_unit]
        [filter]
            id={ID}
        [/filter]

        variable={VAR_NAME}
    [/store_unit]

    {EXTRA_ANIM_UNIT {ID} (
        alpha=1~0.3:400,0.3~0:600
        offset=0~1:1000
        [frame]
            image=${VAR_NAME}.image:1000
        [/frame]
    )}

    [kill]
        id={ID}
    [/kill]
#enddef

###########################
# Portal animation macros #
###########################

#define ANIMATED_PORTAL_IMAGE1 OP SCL X Y
    # Used by ANIMATED_PORTAL macro; don't use by itself

    ../misc/blank-hex.png~BLIT(../scenery/whirlpool.png~GS()~CS(0,-50,0)~O({OP})~SCALE({SCL},{SCL}),{X},{Y}):100
#enddef

#define ANIMATED_PORTAL_IMAGE2 OP SCL X Y
    # Used by ANIMATED_PORTAL macro; don't use by itself

    ../misc/blank-hex.png~BLIT(../scenery/whirlpool.png~FL()~GS()~CS(0,-50,0)~O({OP})~SCALE({SCL},{SCL}),{X},{Y}):100
#enddef

#define ANIMATED_PORTAL_IMAGE3 OP SCL X Y
    # Used by ANIMATED_PORTAL macro; don't use by itself

    ../misc/blank-hex.png~BLIT(../scenery/whirlpool.png~FL('vert')~GS()~CS(0,-50,0)~O({OP})~SCALE({SCL},{SCL}),{X},{Y}):100
#enddef

#define ANIMATED_PORTAL_IMAGE4 OP SCL X Y
    # Used by ANIMATED_PORTAL macro; don't use by itself

    ../misc/blank-hex.png~BLIT(../scenery/whirlpool.png~FL('vert','horiz')~GS()~CS(0,-50,0)~O({OP})~SCALE({SCL},{SCL}),{X},{Y}):100
#enddef

#define ANIMATED_PORTAL_NAME
    # Used by SET_PORTAL_ANIM macro; don't use by itself

    {ANIMATED_PORTAL_IMAGE1 0.50 72  0  0},
    {ANIMATED_PORTAL_IMAGE2 0.48 72  0  0},
    {ANIMATED_PORTAL_IMAGE3 0.46 68  2  4},
    {ANIMATED_PORTAL_IMAGE4 0.44 64  4  8},
    {ANIMATED_PORTAL_IMAGE1 0.42 60  6 12},
    {ANIMATED_PORTAL_IMAGE2 0.40 56  8 16},
    {ANIMATED_PORTAL_IMAGE3 0.38 52 10 20},
    {ANIMATED_PORTAL_IMAGE4 0.36 48 12 24},
    {ANIMATED_PORTAL_IMAGE1 0.34 44 14 28},
    {ANIMATED_PORTAL_IMAGE2 0.32 40 16 32},
    {ANIMATED_PORTAL_IMAGE3 0.30 36 18 36},
    {ANIMATED_PORTAL_IMAGE4 0.28 32 20 40},
    {ANIMATED_PORTAL_IMAGE1 0.26 28 22 44},
    {ANIMATED_PORTAL_IMAGE2 0.24 24 24 48},
    {ANIMATED_PORTAL_IMAGE3 0.22 20 26 52},
    {ANIMATED_PORTAL_IMAGE4 0.20 16 28 56},
    {ANIMATED_PORTAL_IMAGE1 0.20 12 30 60},
    {ANIMATED_PORTAL_IMAGE2 0.20 12 30 60},
    {ANIMATED_PORTAL_IMAGE3 0.20 12 30 60},
    {ANIMATED_PORTAL_IMAGE4 0.20 12 30 60},
    {ANIMATED_PORTAL_IMAGE1 0.20 16 28 56},
    {ANIMATED_PORTAL_IMAGE2 0.22 20 26 52},
    {ANIMATED_PORTAL_IMAGE3 0.24 24 24 48},
    {ANIMATED_PORTAL_IMAGE4 0.26 28 22 44},
    {ANIMATED_PORTAL_IMAGE1 0.28 32 20 40},
    {ANIMATED_PORTAL_IMAGE2 0.30 36 18 36},
    {ANIMATED_PORTAL_IMAGE3 0.32 40 16 32},
    {ANIMATED_PORTAL_IMAGE4 0.34 44 14 28},
    {ANIMATED_PORTAL_IMAGE1 0.36 48 12 24},
    {ANIMATED_PORTAL_IMAGE2 0.38 52 10 20},
    {ANIMATED_PORTAL_IMAGE3 0.40 56  8 16},
    {ANIMATED_PORTAL_IMAGE4 0.42 60  6 12},
    {ANIMATED_PORTAL_IMAGE1 0.44 64  4  8},
    {ANIMATED_PORTAL_IMAGE2 0.46 68  2  4}
#enddef

#define SET_PORTAL_ANIM X Y
    # Place an animated whirlpool with chasm below it at @x,@y
    # This needs to be placed at scenario toplevel

    [terrain_graphics]
        x={X}
        y={Y}
        [tile]
            x=0
            y=0
            type=Qxe
            [image]
                layer=0
                name="{ANIMATED_PORTAL_NAME}"
            [/image]
        [/tile]
    [/terrain_graphics]
#enddef

#define OPEN_PORTAL X Y
    [terrain]
        x={X}
        y={Y}
        terrain=Qxe
    [/terrain]
    [redraw]
    [/redraw]
#enddef

#define PORTAL_FRAME IMAGE OP SCL X Y N
    # Used by PORTAL_IN macro; don't use by itself

    [frame]
        image={IMAGE}~O({OP})~SCALE({SCL},{SCL}):100
        #halo=projectiles/fireball-impact-{N}.png~GS()~CS(0,-50,0)~O({OP}):60
        x,y={X},{Y}
        halo_y=-24
        sound=magic-dark-big.ogg
    [/frame]
#enddef

#define PORTAL_IN SIDE X Y IMAGE FACING
    # Play fading-in animation for a unit coming through a portal
    # This places an invisible unit on the map and kills it again afterward,
    # so the hex must be empty for this to work
    # @SIDE: side of the unit (for team coloring)
    # @x,@y: the location of the portal hex
    # @IMAGE: the image to use for the animation
    # @FACING: the direction in which the unit should be facing

    {EXTRA_ANIM_HEX {X} {Y} {FACING} (
        {PORTAL_FRAME "{IMAGE}~TC({SIDE},magenta)" 0.30  7  0 39  1}
        {PORTAL_FRAME "{IMAGE}~TC({SIDE},magenta)" 0.30 12  0 36  2}
        {PORTAL_FRAME "{IMAGE}~TC({SIDE},magenta)" 0.30 17  0 33  3}
        {PORTAL_FRAME "{IMAGE}~TC({SIDE},magenta)" 0.32 22  0 30  4}
        {PORTAL_FRAME "{IMAGE}~TC({SIDE},magenta)" 0.34 27  0 27  5}
        {PORTAL_FRAME "{IMAGE}~TC({SIDE},magenta)" 0.36 32  0 24  6}
        {PORTAL_FRAME "{IMAGE}~TC({SIDE},magenta)" 0.38 37  0 21  7}
        {PORTAL_FRAME "{IMAGE}~TC({SIDE},magenta)" 0.40 42  0 18  8}
        {PORTAL_FRAME "{IMAGE}~TC({SIDE},magenta)" 0.42 47  0 15  9}
        {PORTAL_FRAME "{IMAGE}~TC({SIDE},magenta)" 0.44 52  0 12 10}
        {PORTAL_FRAME "{IMAGE}~TC({SIDE},magenta)" 0.46 57  0  9 11}
        {PORTAL_FRAME "{IMAGE}~TC({SIDE},magenta)" 0.48 63  0  6 12}
        {PORTAL_FRAME "{IMAGE}~TC({SIDE},magenta)" 0.50 67  0  3 13}
        {PORTAL_FRAME "{IMAGE}~TC({SIDE},magenta)" 0.60 72  0 -0 14}
        {PORTAL_FRAME "{IMAGE}~TC({SIDE},magenta)" 0.70 72  0 -2 15}
        {PORTAL_FRAME "{IMAGE}~TC({SIDE},magenta)" 0.80 72  0  0 16}
    )}
#enddef

#define PORTAL_FALL X Y
    # Play fading-out animation for a unit falling down a portal hex
    # and kill the unit.
    # @x,@y: the location of the portal hex

    [store_unit]
        [filter]
            x,y={X},{Y}
        [/filter]

        variable=EAU_unit
    [/store_unit]

    {MESSAGE_GRNK $EAU_unit.id "" "" _"$EAU_unit.name fall!"}

    {EXTRA_ANIM_UNIT_NO_STORE $EAU_unit.id (
        {PORTAL_FRAME $EAU_unit.image 0.80 72  0  0 16}
        {PORTAL_FRAME $EAU_unit.image 0.70 72  0 -2 15}
        {PORTAL_FRAME $EAU_unit.image 0.60 72  0 -0 14}
        {PORTAL_FRAME $EAU_unit.image 0.50 67  0  3 13}
        {PORTAL_FRAME $EAU_unit.image 0.48 63  0  6 12}
        {PORTAL_FRAME $EAU_unit.image 0.46 57  0  9 11}
        {PORTAL_FRAME $EAU_unit.image 0.44 52  0 12 10}
        {PORTAL_FRAME $EAU_unit.image 0.42 47  0 15  9}
        {PORTAL_FRAME $EAU_unit.image 0.40 42  0 18  8}
        {PORTAL_FRAME $EAU_unit.image 0.38 37  0 21  7}
        {PORTAL_FRAME $EAU_unit.image 0.36 32  0 24  6}
        {PORTAL_FRAME $EAU_unit.image 0.34 27  0 27  5}
        {PORTAL_FRAME $EAU_unit.image 0.32 22  0 30  4}
        {PORTAL_FRAME $EAU_unit.image 0.30 17  0 33  3}
        {PORTAL_FRAME $EAU_unit.image 0.30 12  0 36  2}
        {PORTAL_FRAME $EAU_unit.image 0.30  7  0 39  1}
    )}

    [kill]
        id=$EAU_unit.id
    [/kill]

    {CLEAR_VARIABLE EAU_unit}
#enddef

##########################
# Misc. animation macros #
##########################

#define TUNNEL_WALK_S13 FILTER
    # Move a unit through the "tunnel" in S13 Lockout
    # Uses fixed coordinates, as it is only needed here

    [modify_unit]
        [filter]
            {FILTER}
        [/filter]

        facing=nw
    [/modify_unit]

    [store_unit]
        [filter]
            {FILTER}
        [/filter]

        variable=TW_unit
    [/store_unit]

    {EXTRA_ANIM_UNIT $TW_unit.id (
        alpha=1~0:300,0:400,0~1:300
        offset=0~2:1000
        [frame]
            image=$TW_unit.image:1000
        [/frame]
    )}

    [kill]
        {FILTER}
    [/kill]

    [unstore_unit]
        variable=TW_unit
        x,y=40,14
    [/unstore_unit]

    {CLEAR_VARIABLE TW_unit}
#enddef
