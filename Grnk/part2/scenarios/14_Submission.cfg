#textdomain wesnoth-Grnk

[scenario]
    id=14_Submission
    name=_"Submission"
    next_scenario=14s_Decision

    map_data="{~add-ons/Grnk/part2/maps/14_Submission.map}"

    {DEFAULT_SCHEDULE}
    turns=-1
    victory_when_enemies_defeated=no

    {GRNK2_STORY_14}
    {PLAYLIST_14_SUBMISSION}

    # wmllint: recognize peasant_leader

    # Set the number of turns for each part of the scenario before transitioning
    # to the next. We use fixed number of turns for each of those, with a
    # backup trigger in case somebody gets a part done earlier.
    #
    # For the dark mages cut scene, the replaying of moves, and the skeleton
    # events to move correctly as currently set up, we need:
    #   part_b_turns >= part_a_turns
    #   part_c_turns <= part_a_turns
    # In general, the three numbers should probably be pretty close to each other
    [event]
        name=prestart

        {VARIABLE part_a_turns 8}
        {VARIABLE part_b_turns 9}
        {VARIABLE part_c_turns 7}

        [modify_turns]
            value="$($part_a_turns+$part_b_turns+$part_c_turns)"
        [/modify_turns]
    [/event]

    # Sides for Part a of the scenario
    [side]
        side=1
        controller=ai
        id=Mal An
        name=Mal An
        gender=male
        unrenamable=yes
        type=Water Lich

        x,y=19,5 # Mal An is invisible on this hex

        team_name=undead
        user_team_name=_"Master's Minions"

        # Only want skeletons here; no ghouls or soulless
        recruit=Skeleton,Skeleton Archer,Chocobone,Deathblade,Revenant,Bone Shooter

        {GOLD 400 500 600}

        [ai]
            aggression=1

            {MODIFY_AI_ADD_CANDIDATE_ACTION 2 main_loop (
                [candidate_action]
                    engine=lua
                    name=mal_an
                    id=mal_an
                    max_score=90000
                    location="~add-ons/Grnk/lua/ca_mal_an.lua"
                [/candidate_action]
            )}
        [/ai]

        # Do not move into the southern part of the map, even for attacks etc.
        [ai]
            [avoid]
                x=1-12,1-14,1-16,1-18,1-20, 1-24
                y=   7,   8,   9,  10,  11,12-24
            [/avoid]
        [/ai]
    [/side]

    [side]
        side=2
        controller=human
        id=Grnk
        name=_"Grnk" # We're finally calling it Grnk's side
        type=Goblin Mage Neophyte

        x,y=7,17

        recruit=Goblin Spearman,Goblin Rouser,Goblin Impaler

        save_id=goblins
        team_name=Grnk
        user_team_name=_"Grnk"

        recall_cost=13
        gold=150
    [/side]

    # Sides for Part b of the scenario
    [side]
        side=3
        controller=null
        id=Vanak
        type=Orcish Sovereign

        persistent=yes
        save_id=Vanak

        x,y=5,20

        recruit=Orcish Archer,Orcish Assassin,Orcish Grunt,Wolf Rider

        side_name=Vanak
        team_name=Grnk
        user_team_name=_"Grnk"
        hidden=yes

        gold=200
    [/side]

    [side]
        side=4
        controller=null
        no_leader=yes
        hidden=yes

        team_name=undead
        user_team_name=_"More Swamp Squatters"
        save_id="Saurians Yet Again"

        recruit=Saurian Skirmisher,Saurian Augur,Saurian Ambusher,Saurian Oracle

        {GOLD 100 150 200}
        {INCOME 20 30 40}

        # Strongly target wood carrying orcs
        [ai]
            aggression=1
            caution=-10
            grouping=no
            village_value=0

            # Recruit one L2 unit per turn
            [aspect]
                id=recruitment_instructions
                [facet]
                    [value]
                        [recruit]
                            type=1,2
                            number=1
                            importance=1
                        [/recruit]
                        [recruit]
                            type=1
                            importance=0
                        [/recruit]
                    [/value]
                [/facet]
            [/aspect]

            [goal]
                [criteria]
                    side=3

                    [filter_wml]
                        overlays={WOOD_OVERLAY}
                    [/filter_wml]
                [/criteria]

                value=100
            [/goal]
        [/ai]
    [/side]

    # Sides for Part c of the scenario
    [side]
        side=5
        controller=null
        no_leader=yes
        hidden=yes

        persistent=no

        team_name=Grnk
        user_team_name=_"Grnk"

        gold=0
        income=-2
        village_gold=0
    [/side]

    [side]
        side=6
        controller=null
        no_leader=yes
        hidden=yes

        team_name=undead
        user_team_name=_"Northern Dark Mages"

        gold=0

        # This is because the Goto MAI is supposed to affect the leader also, but has low score
        [ai]
            aggression=1

            {MODIFY_AI_DELETE_CANDIDATE_ACTION 6 main_loop move_leader_to_keep}

            # The mages also ignore the bats and the boats
            [aspect]
                id=attacks
                [facet]
                    invalidate_on_gamestate_change=yes
                    [filter_enemy]
                        [not]
                            side=7,8
                        [/not]
                    [/filter_enemy]
                [/facet]
            [/aspect]
        [/ai]
    [/side]

    [side] # Bats
        side=7
        controller=ai
        no_leader=yes
        hidden=yes

        team_name=bats
    [/side]

    [side] # Boats
        side=8
        controller=null
        no_leader=yes
        hidden=yes

        team_name=Grnk
    [/side]

    [event]
        name=prestart

        {FULL_HEAL_AND_CURE side=2}

        [modify_unit]
            [filter]
                id=Grnk
            [/filter]

            facing=nw
            moves=$this_unit.max_moves
        [/modify_unit]

        [recall]
            id=Grashnak
            x,y=8,19
        [/recall]
        [recall]
            id=Gort
            x,y=9,20
        [/recall]

        [modify_unit]
            [filter]
                id=Grashnak,Gort
            [/filter]

            facing=ne
        [/modify_unit]

        # Location of Mal An's keep in Part a
        [set_variables]
            name=S.keep_Mal_An
            [value]
                x=21
                y=6
            [/value]
        [/set_variables]

        {CLEAR_MENU_PRUNES} # No prunes in this scenario

        [objectives]
            summary=_"<span color='#A050A0'>Deal A Crushing Defeat To The Master's Second-In-Command</span>"
            [objective]
                description=_"Defeat Mal An"
                condition=win
            [/objective]
            [objective]
                description=_"Death of Grnk"
                condition=lose
            [/objective]
            {TURNS_RUN_OUT}
            [gold_carryover]
                bonus=yes
                carryover_percentage=40
            [/gold_carryover]
            [note]
                description=_"Recruiting and recalling goblins works the same as in the previous scenario."
            [/note]
        [/objectives]
    [/event]

    [event]
        name=start

        {MESSAGE_RIGHT Grnk _"Here, lichy, lichy, lichy."}
        {MESSAGE_RIGHT Grnk _"Mal An, I know that you are here."}
        {BOOMING_VOICE_EFFECT_GRNK Grnk _"Show yourself!" 11 18 0.5 "~FL()"}

        {SCROLL_TO 19 8}
        {MOVE_UNIT (id=Mal An) 21 6}

        {MESSAGE_FACING (Mal An) Grnk yes _"Who dares disturb ... Oh, it's you! Yes, we were told that you would come."}
        {MESSAGE_FACING_RIGHT Grnk (Mal An) () _"You were?"}
        {MESSAGE_GRNK (Mal An) "" "" "Indeed. You donâ€™t seriously believe that the Master does not know about your moronic plan, do you?"}
        {MESSAGE_RIGHT Grnk _"Well ... I guess I had ... But either way ..."}
        {MESSAGE_RIGHT Grnk _"Mal An, surrender now and I will spare ..."}
        {MESSAGE_GRNK (Mal An) "" "" _"Hahahahaha. You're a funny little fellow, Grnk.
<i> </i>
Rise, skeleton minions. And remember, the Master wants Grnk alive!"}
        {MESSAGE_GRNK (Mal An) "" "" "Oh, and just so you're not getting any ideas, the little trick you pulled on Karcyn's undead won't work on mine. I can easily undo that sort of child's play."+{NOTE _"This means that Grnk still inspires his goblin's to have the surefire weapon special, but Mal An's undead are not afflicted by the brittle (anti)ability."}}
        {MESSAGE_GRNK (Mal An) "" "" _"And while we're at it ..."}
        {FIREBALL 7 17 ()}
        {MESSAGE_RIGHT Grnk _"Ouch!"}
        {MESSAGE_RIGHT Grnk _"You burned my prunes! Now I cannot ..."}
        {MESSAGE_RIGHT Grnk _"I'm going to get you!!!"}
        {MESSAGE_GRNK (Mal An) "" "" _"Hahahahaha."}
    [/event]

    {SUREFIRE_EVENT 2}
    {PEASANT_EVENTS_P2S14 5 8}
    {BAT_EVENTS_P2S14 7}
    {MAL_AN_SHADOW}

    ######## Events for Part a of the scenario ########

    {STORE_MOVES}

    # One L1 goblin recruit per turn
    [event]
        name=side 2 turn
        first_time_only=no

        [allow_recruit]
            side=2
            type=Goblin Rouser,Goblin Impaler
        [/allow_recruit]
    [/event]

    [event]
        name=recruit
        first_time_only=no

        [filter]
            side=2
            type=Goblin Rouser,Goblin Impaler
        [/filter]

        [disallow_recruit]
            side=2
            type=Goblin Rouser,Goblin Impaler
        [/disallow_recruit]
    [/event]

    # Set the water terrain for recruiting, but only during Mal An's turn
    # Also, Mal An never moves
    [event]
        name=side 1 turn refresh
        first_time_only=no

        [if]
            [have_unit]
                id=Mal An
            [/have_unit]

            [then]
                [terrain]
                    x,y=$S.keep_Mal_An.x,$S.keep_Mal_An.y
                    radius=1

                    terrain=Ww^Cw
                [/terrain]
                [terrain]
                    x,y=$S.keep_Mal_An.x,$S.keep_Mal_An.y

                    terrain=Ww^Kw
                [/terrain]
            [/then]
        [/if]

        [modify_unit]
            [filter]
                id=Mal An
            [/filter]

            moves=0
        [/modify_unit]
    [/event]

    # Also put two L3s out there. This is done manually, because I want them
    # on specific hexes
    [event]
        name=side 1 turn 1 refresh

        # Units are stored into variables first, so that they don't appear on
        # the map before the recuiting animation
        [unit]
            side=1
            type=Banebow
            x,y=20,6
            moves=0
            facing=sw
            to_variable=tmp_unit
        [/unit]
        [unstore_unit]
            variable=tmp_unit
        [/unstore_unit]
        {RECRUITING_ANIMATION (id=Mal An) (x,y=20,6)}
        [gold]
            side=1
            amount=-38
        [/gold]

        [unit]
            side=1
            type=Draug
            x,y=21,7
            moves=0
            facing=sw
            to_variable=tmp_unit
        [/unit]
        [unstore_unit]
            variable=tmp_unit
        [/unstore_unit]
        {RECRUITING_ANIMATION (id=Mal An) (x,y=21,7)}
        [gold]
            side=1
            amount=-50
        [/gold]

        {CLEAR_VARIABLE tmp_unit}
    [/event]

    [event]
        name=side 1 turn end
        first_time_only=no

        [if]
            [have_unit]
                id=Mal An
            [/have_unit]

            [then]
                [terrain]
                    x,y=$S.keep_Mal_An.x,$S.keep_Mal_An.y
                    radius=1

                    terrain=Ww
                [/terrain]
            [/then]
        [/if]
    [/event]

    [event]
        name=side 2 turn 2 end

        {MESSAGE_RIGHT Grnk _"Something's very fishy here."}

        [role]
            race=goblin
            [not]
                id=Grashnak,Grnk
            [/not]

            role=random_goblin
        [/role]

        [message]
            role=random_goblin
            message=_"Big lake. Lot fish."
        [/message]

        {MESSAGE_RIGHT Grnk _"Indeed. But not quite what I meant.
<i> </i>
If the Master knew that we were coming, how come he left Mal An with such a measly little army? I can almost take all of them out by myself, even without my prunes."}
    [/event]

    # Message the first time a skeleton disappears
    [event]
        name=skeleton_disappears

        {MESSAGE_FACING Grnk (Mal An) "" _"Where did that skeleton go?"}
        {MESSAGE_GRNK (Mal An) "" "" _"Hah! I'm sure as hell not going to tell you. Hahahahaha!"}
    [/event]

    # Mal An sends units off for Part b
    # This happening in Part d is very unlikely in the first place, but also made
    # impossible by making hexes (21,5) and (22,5) impassable on the Part d map.
    [event]
        name=side 1 turn refresh
        first_time_only=no

        [store_unit]
            [filter]
                side=1
                x,y=22,5
                formula = '$this_unit.moves >= 2'
            [/filter]

            variable=tmp_unit_14b
        [/store_unit]

        [if]
            [variable]
                name=tmp_unit_14b.length
                greater_than=0
            [/variable]

            [then]
                # Skeletons don't have names or random traits -> need to save type only
                [set_variables]
                    name=stored_skeletons.S14b
                    mode=append

                    [value]
                        turn_number=$turn_number
                        type=$tmp_unit_14b.type
                    [/value]
                [/set_variables]

                {MOVE_UNIT_TO_EDGE_AND_OFF_MAP $tmp_unit_14b.id 24 6 se}

                {CLEAR_VARIABLE tmp_unit_14b}

                [fire_event]
                    name=skeleton_disappears
                [/fire_event]
            [/then]
        [/if]
    [/event]

    # Dark mages cut scene
    [event]
        name=dark_mages_cutscene

        [modify_side]
            side=2
            shroud=yes
        [/modify_side]
        [redraw]
        [/redraw]

        [store_unit]
            [filter]
                x=1-999
            [/filter]

            variable=tmp_units
            kill=yes
        [/store_unit]

        [store_locations]
            [not]
                owner_side=0
            [/not]

            variable=tmp_villages
        [/store_locations]

        [dialog_message]
            message=_"Just then, in a place not at all far, far away"
        [/dialog_message]

        [fire_event]
            name=music_legends
        [/fire_event]

        [replace_map]
            map="{~add-ons/Grnk/part2/maps/14c_Submission.map}"
            expand=yes
            shrink=yes
        [/replace_map]

        [remove_shroud]
            side=2
            x,y=12,1
            radius=7
        [/remove_shroud]

        {DARK_MAGES}

        [place_shroud]
            side=2
            x,y=1-22,0-10
        [/place_shroud]

        {MASTERS_LAIR 1 2 "Which might be a bit of a misconception"}

        {MESSAGE_GRNK Master "" "" _"Is the entire world filled with idiots?! What do those amateurs think they are doing? Mal An is supposed to make it look real, but he mustn't win this battle."}
        {MESSAGE_GRNK Sklaf "" "" _"Your wrath will be terrible?"}
        {MESSAGE_GRNK Master "" "" _"Naturally."}
        {MESSAGE_GRNK Master "" "" _"I need to stop those morons, but I cannot do so myself or Grnk will surely see through my plan."+{GASP_MIDDLE _"sigh"}+_"I guess I'll send one of my Hynderwlt underlings to round up some peasants. Based on previous experience, they'll be more than happy to sacrifice themselves for what they believe is the right cause. They are even more gullible than Grnk himself."}
        {MESSAGE_GRNK Sklaf "" "" _"You truly are evil, Master. Here's a brandy for the road."}

        [kill]
            side=1,6
        [/kill]

        [modify_side]
            side=2
            shroud=yes
        [/modify_side]
        [redraw]
        [/redraw]

        [remove_item]
        [/remove_item]

        [replace_map]
            map="{~add-ons/Grnk/part2/maps/14_Submission.map}"
            expand=yes
            shrink=yes
        [/replace_map]

        {FOREACH tmp_units i_u}
            [unstore_unit]
                variable=tmp_units[$i_u]
            [/unstore_unit]
        {NEXT i_u}
        {CLEAR_VARIABLE tmp_units}

        {FOREACH tmp_villages i_v}
            [capture_village]
                side=$tmp_villages[$i_v].owner_side
                x,y=$tmp_villages[$i_v].x,$tmp_villages[$i_v].y
            [/capture_village]
        {NEXT i_v}
        {CLEAR_VARIABLE tmp_villages}

        [modify_side]
            side=2
            shroud=no
        [/modify_side]
        [redraw]
        [/redraw]

        {MESSAGE_GRNK Grnk "" "" _"Did you hear something?"}

        [role]
            race=goblin
            [not]
                id=Grashnak,Grnk
            [/not]

            role=random_goblin
        [/role]

        [message]
            role=random_goblin
            message=_"What hear?"
        [/message]
    [/event]

    # Trigger for the dark mages cut scene
    [event]
        name=turn end
        first_time_only=no

        [if]
            [variable]
                name=turn_number
                equals=3
                # In principle it should fire at this turn:
                #equals="$($part_a_turns-$part_c_turns+1)"
                # But I don't like the timing of that. Taking the artistic license here.
            [/variable]

            [then]
                [fire_event]
                    name=dark_mages_cutscene
                [/fire_event]
            [/then]
        [/if]
    [/event]

    ######## Transition from Part a to Part b ########

    [event]
        name=new turn
        first_time_only=no

        [if]
            [variable]
                name=turn_number
                equals="$($part_a_turns+1)"
            [/variable]

            [then]
                [event]
                    name=side 1 turn end

                    [fire_event]
                        name=part_b
                    [/fire_event]
                [/event]
            [/then]
        [/if]
    [/event]

    [event]
        name=part_b

        {MESSAGE_GRNK Grnk "" "" _"I wonder where Vanak is."}

        [modify_side]
            side=2
            shroud=yes
        [/modify_side]
        [redraw]
        [/redraw]

        # wmllint: display on
        [dialog_message]
            message=_"While Grnk will have to wonder for a little longer,
we can show you what Vanak has been up to."
        [/dialog_message]
        # wmllint: display off

        [store_unit]
            [filter]
                x=1-999
            [/filter]

            variable=stored_units_S14a
            kill=yes
        [/store_unit]

        [store_locations]
            [not]
                owner_side=0
            [/not]

            variable=stored_villages_S14a
        [/store_locations]

        [replace_map]
            map="{~add-ons/Grnk/part2/maps/14b_Submission.map}"
            expand=yes
            shrink=yes
        [/replace_map]

        # Set time of day so that this part ends at same ToD as part a
        # Note that counting for this starts at 0
        # The +12 is so that the number is always positive
        [replace_schedule]
            {DEFAULT_SCHEDULE}
            current_time="$($part_a_turns-$part_b_turns+12)"
        [/replace_schedule]

        [recall]
            id=Vanak
            x,y=22,23
            show=no
        [/recall]
        [recall]
            id=Quank
            x,y=22,22
            show=no
        [/recall]

        [unit]
            side=4
            type=Saurian Flanker
            id=saurian_leader
            canrecruit=yes

            x,y=31,11
        [/unit]

        # So that Side 2 units in replays can capture villages
        {UNIT 2 (Invisible Unit) 5 11 (canrecruit=yes)}
        [hide_unit]
            type=Invisible Unit
        [/hide_unit]

        # Set up replaying of the stored moves
        {REPLAY_STORED_MOVES}

        [modify_side]
            side=2
            shroud=no
        [/modify_side]
        [redraw]
        [/redraw]

        # Do not set Side 1 controller to null, skeletons will move in
        [modify_side]
            side=1
            hidden=yes
        [/modify_side]

        [modify_side]
            side=2
            controller=null
            hidden=yes
        [/modify_side]

        [modify_side]
            side=3
            controller=human
            hidden=no
        [/modify_side]

        [modify_side]
            side=4
            controller=ai
            hidden=no
        [/modify_side]

        # Remove the avoid tag for the skeletons sent in by Mal An
        # wmllint: unbalanced-on
        [modify_ai]
            side=1
            action=delete
            path=aspect[avoid].facet[*]
        [/modify_ai]
        # wmllint: unbalanced-off

        # Menu item for building bridge in deep water
        [set_menu_item]
            id=m01_unload
            description=_"Unload Wood Here"
            image=units/float.png~CROP(11,35,48,36)~SCALE(24,18)

            [filter_location]
                terrain=Wo

                [filter_adjacent_location]
                    [filter]
                        [filter_wml]
                            overlays={WOOD_OVERLAY}
                        [/filter_wml]
                    [/filter]
                [/filter_adjacent_location]

                [not]
                    [filter]
                    [/filter]
                [/not]
            [/filter_location]

            [show_if]
                [variable]
                    name=side_number
                    equals=3
                [/variable]
            [/show_if]

            [command]
                # Find the unit that can unload
                [store_unit]
                    [filter]
                        [filter_wml]
                            overlays={WOOD_OVERLAY}
                        [/filter_wml]

                        [filter_location]
                            [filter_adjacent_location]
                                x,y=$x1,$y1
                            [/filter_adjacent_location]
                        [/filter_location]
                    [/filter]

                    variable=tmp_grunt
                [/store_unit]

                # Give it normal appearance and attacks back
                [remove_unit_overlay]
                    id=$tmp_grunt.id
                    image={WOOD_OVERLAY}
                [/remove_unit_overlay]

                [object]
                    duration=scenario
                    silent=yes
                    [filter]
                        id=$tmp_grunt.id
                    [/filter]

                    [effect]
                        apply_to=attack
                        attack_weight=1
                        defense_weight=1
                    [/effect]
                [/object]

                # Now check out whether this was the first unload on this hex or second.
                # This is done by looking whether there is an image set for the hex already.
                [store_items]
                    x,y=$x1,$y1
                    variable=loc_with_image
                [/store_items]

                [if]
                    [variable]
                        name=loc_with_image.length
                        equals=0
                    [/variable]

                    # If not, we place the image
                    [then]
                        [item]
                            x,y=$x1,$y1
                            image=units/float.png~CROP(1,18,72,54)
                        [/item]
                    [/then]

                    # If yes, we change the terrain to bridge
                    [else]
                        [remove_item]
                            x,y=$x1,$y1
                        [/remove_item]

                        [terrain]
                            x,y=$x1,$y1
                            terrain=Wo^Bw|r
                        [/terrain]

                        # Check whether a path to the northern shore has been established
                        [find_path]
                            [traveler]
                                id=Vanak
                            [/traveler]

                            [destination]
                                x,y=13,1
                            [/destination]

                            variable=tmp_path
                            allow_multiple_turns=yes
                            check_zoc=no
                        [/find_path]

                        [if]
                            [variable]
                                name=tmp_path.hexes
                                not_equals=0
                            [/variable]

                            [then]
                                [redraw]
                                [/redraw]

                                {MESSAGE_GRNK Quank "" "" _"Not the prettiest or most stable set of bridges I've ever seen, but it'll do."}

                                # Set variable so that village events do not fire any more and remove menu item
                                {VARIABLE S.bridge_built yes}

                                [set_menu_item]
                                    id=m02_bridge_instructions
                                    [show_if]
                                        [not]
                                        [/not]
                                    [/show_if]
                                [/set_menu_item]

                                # All orcs still carrying wood drop their loads and can fight again
                                [store_unit]
                                    [filter]
                                        [filter_wml]
                                            overlays={WOOD_OVERLAY}
                                        [/filter_wml]
                                    [/filter]

                                    variable=wood_grunts
                                [/store_unit]

                                {FOREACH wood_grunts i_g}
                                    {MESSAGE_GRNK $wood_grunts[$i_g].id "" "" _"$wood_grunts[$i_g].name drop wood."}

                                    [remove_unit_overlay]
                                        id=$wood_grunts[$i_g].id
                                        image={WOOD_OVERLAY}
                                    [/remove_unit_overlay]

                                    [object]
                                        duration=scenario
                                        silent=yes
                                        [filter]
                                            id=$wood_grunts[$i_g].id
                                        [/filter]

                                        [effect]
                                            apply_to=attack
                                            attack_weight=1
                                            defense_weight=1
                                        [/effect]
                                    [/object]
                                {NEXT i_g}

                                {CLEAR_VARIABLE wood_grunts,wood_taken}

                                # Also, if this happens before the transition to part c,
                                # (which should not be possible), force the transition
                                [if]
                                    [not]
                                        [have_unit]
                                            id=Grnk
                                        [/have_unit]
                                    [/not]

                                    [then]
                                        {DEBUG_ERROR_MESSAGE _"If you see this, it means that the scenario is not balanced well enough (you should not be able to finish the bridge this quickly). You can probably continue the scenario, but please consider reporting this as described below."}

                                        [fire_event]
                                            name=part_c
                                        [/fire_event]

                                        [modify_turns]
                                            current="$($part_a_turns+$part_b_turns+1)"
                                        [/modify_turns]

                                        # And end turn of the current side
                                        [end_turn]
                                        [/end_turn]

                                        # Need to set ToD here again (see part_c event)
                                        [replace_schedule]
                                            {DEFAULT_SCHEDULE}
                                            current_time="$($part_a_turns-$part_c_turns+12)"
                                        [/replace_schedule]
                                    [/then]
                                [/if]

                                # Finally, check if the scenario is done
                                [fire_event]
                                    name=is_S14_done
                                [/fire_event]
                            [/then]
                        [/if]
                    [/else]
                [/if]

                {CLEAR_VARIABLE tmp_grunt,tmp_path,loc_with_image}
            [/command]
        [/set_menu_item]

        {MESSAGE_GRNK Quank "" "" _"Hurry, Vanak. If my sources are correct, Grnk needs our help. We must make it across the lake in the north as quickly as possible."}
        {MESSAGE_GRNK Vanak "" "" _"Orc no swim water."}
        {MESSAGE_GRNK Quank "" "" _"No, dwarves cannot cross water that deep either, but we can build a makeshift bridge. Tell your grunts to gather wood from those abandoned houses in the west and carry it to the shore."+{NOTE _"There is a right-click option with more information about this process."}}
        {MESSAGE_GRNK Vanak "" "" _"Little dwarf smart. Almost same little goblin."}
        {MESSAGE_GRNK Quank "" "" _"Thanks. At least I think that that was a compliment."}

        [set_menu_item]
            id=m02_bridge_instructions
            description=_"Bridge Building Instructions"
            image=items/ring-red.png~CROP(26,26,20,20)~GS()~CS(0,-50,0)

            [show_if]
                [variable]
                    name=side_number
                    equals=3
                [/variable]
                [variable]
                    name=S.bridge_built
                    not_equals=yes
                [/variable]
            [/show_if]

            [command]
                {NARRATOR_GRAY _"Bridge Building Instructions" _"The stronger orcs can gather wood from the abandoned houses by the volcano in the southwest and use it to build a bridge to the northern shore.
<i> </i>
In practice this means:
  â€¢ To gather wood, move an orc onto one of the broken houses in the southwest
  â€¢ Unload wood by moving the orc next to unoccupied deep water and right-clicking on the water hex.
  â€¢ It takes two loads of wood per hex to build a bridge.
  â€¢ Each house yields three loads of wood.
  â€¢ Only Vanak and grunts (or their advancements) are strong enough to carry the wood.
  â€¢ Orcs carrying wood cannot attack or defend themselves."}
            [/command]
        [/set_menu_item]

        [objectives]
            summary=_"<span color='#A050A0'>Hurry To Grnk's Aid</span>"
            [objective]
                description=_"Build a bridge and move Vanak's army to the northern shore"
                condition=win
            [/objective]
            [objective]
                description=_"Additionally, Vanak and Quank need to move onto the island (or farther north)"
                condition=win
            [/objective]
            [objective]
                description=_"Death of Vanak"
                condition=lose
            [/objective]
            [objective]
                description=_"Death of Quank"
                condition=lose
            [/objective]
            {TURNS_RUN_OUT}
            [gold_carryover]
                bonus=yes
                carryover_percentage=40
            [/gold_carryover]
            [note]
                description=_"Check out the right-click options for bridge building instructions."
            [/note]
            [note]
                description=_"Any orc still being south of the island at scenario end <span color='#FF0000'>will be lost</span> to the saurians."
            [/note]
        [/objectives]

        [event]
            name=side 4 turn

            {MESSAGE_GRNK saurian_leader "" "" _"Intrudersss! Letss get zzem!"}
            {MESSAGE_GRNK Quank "" "" {GASP_BEGINNING _"sigh"}+_"I presume that you like smashing suarians, Vanak?"}
            {MESSAGE_GRNK Vanak "" "" _"Vanak no like lizard. No taste good."}
            {MESSAGE_GRNK Quank "" "" _"I see."}

            [event]
                name=side 4 turn

                [event]
                    name=side 3 turn

                    {MESSAGE_GRNK Quank "" "" _"Remember, Vanak, killing all the lizards is fine, but the main goal is to get to the north shore as quickly and with as many orcs as possible. Grnk needs our help."}
                    {MESSAGE_GRNK Vanak "" "" _"Vanak understand."}
                    {MESSAGE_GRNK Quank "" "" _"You do? Well, good then."}
                [/event]
            [/event]
        [/event]
    [/event]

    ######## Events for Part b of the scenario ########

    # Message the first time a skeleton reappears
    [event]
        name=skeleton_reappears

        {MESSAGE_FACING Quank Vanak "" _"Looks like the Master knows that we are here. I can't say that I am surprised."}
        {MESSAGE_GRNK Vanak "" "" _"Vanak like smash skeleton."}
    [/event]

    # Bring in the skeletons Mal An sent out (it takes them 2 turns to get there)
    [event]
        name=side 1 turn end
        first_time_only=no

        [if]
            [have_unit]
                id=Vanak
            [/have_unit]
            [not]
                [have_unit]
                    id=Grnk,peasant_leader
                [/have_unit]
            [/not]
            [variable]
                name=stored_skeletons.S14b.length
                greater_than=0
            [/variable]
            [variable]
                name=turn_number
                equals="$($stored_skeletons.S14b[0].turn_number+$part_b_turns+2)"
            [/variable]

            [then]
                {SCROLL_TO 12 1}
                {MOVE_UNIT_ONTO_MAP 1 "$stored_skeletons.S14b[0].type" 12 1 s ()}
                {CLEAR_VARIABLE stored_skeletons.S14b[0]}

                [fire_event]
                    name=skeleton_reappears
                [/fire_event]
            [/then]
        [/if]
    [/event]

    # Grab wood from villages (grunt line or Vanak only)
    # Note that there may not be other hexes with the Rd^Vhr terrain on the map
    # for this to work correctly
    [event]
        name=moveto
        first_time_only=no

        [filter]
            side=3
            [and]
                type=Orcish Grunt,Orcish Warrior,Orcish Warlord
                [or]
                    id=Vanak
                [/or]
            [/and]
            [filter_location]
                terrain=Rd^Vhr
            [/filter_location]
        [/filter]

        [if]
            [variable]
                name=S.bridge_built
                not_equals=yes
            [/variable]

            [then]
                [if]
                    [variable]
                        name=unit.overlays
                        equals=""
                    [/variable]

                    [then]
                        [unit_overlay]
                            id=$unit.id
                            image={WOOD_OVERLAY}
                        [/unit_overlay]

                        [object]
                            duration=scenario
                            silent=yes
                            [filter]
                                id=$unit.id
                            [/filter]

                            [effect]
                                apply_to=attack
                                attack_weight=0
                                defense_weight=0
                            [/effect]
                        [/object]

                        # Each village only yields 3 loads of wood
                        [if]
                            [variable]
                                name=wood_taken.i"$($x1*100+$y1)"
                                equals=""
                            [/variable]

                            [then]
                                {VARIABLE wood_taken.i"$($x1*100+$y1)" 1}
                            [/then]

                            [else]
                                {VARIABLE_OP wood_taken.i"$($x1*100+$y1)" add 1}
                            [/else]
                        [/if]

                        [if]
                            [variable]
                                name=wood_taken.i"$($x1*100+$y1)"
                                equals=3
                            [/variable]

                            [then]
                                {CLEAR_VARIABLE wood_taken.i"$($x1*100+$y1)"}
                                {BURN_VILLAGE $x1 $y1}
                            [/then]
                        [/if]

                        {MESSAGE_RIGHT $unit.id _"$unit.name get wood."}
                    [/then]

                    [else]
                        {MESSAGE_RIGHT $unit.id _"$unit.name no can carry more."}
                    [/else]
                [/if]
            [/then]
        [/if]
    [/event]

    # Other orcs cannot pick up the wood
    [event]
        name=moveto
        first_time_only=no
        [allow_undo]
        [/allow_undo]

        [filter]
            side=3
            [not]
                type=Orcish Grunt,Orcish Warrior,Orcish Warlord
                [or]
                    id=Vanak
                [/or]
            [/not]
            [filter_location]
                terrain=Rd^Vhr
            [/filter_location]
        [/filter]

        [if]
            [variable]
                name=S.bridge_built
                not_equals=yes
            [/variable]

            [then]
                {NARRATOR_GRAY "" _"Only Vanak and orcs of the grunt line (grunts, warriors and warlords) are strong enough to pick up the wood needed for building the bridge."}
            [/then]
        [/if]
    [/event]

    ######## Transition from Part b to Part c ########

    [event]
        name=new turn
        first_time_only=no

        [if]
            [variable]
                name=turn_number
                equals="$($part_a_turns+$part_b_turns+1)"
            [/variable]

            [then]
                [fire_event]
                    name=part_c
                [/fire_event]
            [/then]
        [/if]
    [/event]

    [event]
        name=part_c

        {MESSAGE_GRNK Vanak "" "" _"Vanak come help little goblin."}

        [modify_side]
            side=3
            shroud=yes
        [/modify_side]
        [redraw]
        [/redraw]

        # wmllint: display on
        [dialog_message]
            message=_"At which point we take another step back and check out
the other series of events the Master put into motion"
        [/dialog_message]
        # wmllint: display off

        # Need to get rid of the invisible Side 2 leader
        [kill]
            type=Invisible Unit
        [/kill]

        [store_unit]
            [filter]
                x=1-999
            [/filter]

            variable=stored_units_S14b
            kill=yes
        [/store_unit]

        [store_locations]
            [not]
                owner_side=0
            [/not]

            variable=stored_villages_S14b
        [/store_locations]

        [store_locations]
            terrain=Wo^B*

            variable=stored_bridges_S14b
        [/store_locations]

        [store_items]
            variable=stored_items_S14b
        [/store_items]

        [remove_item]
        [/remove_item]

        [replace_map]
            map="{~add-ons/Grnk/part2/maps/14c_Submission.map}"
            expand=yes
            shrink=yes
        [/replace_map]

        # Set time of day so that this part ends at same ToD as part a
        # Note that counting for this starts at 0
        # The +12 is so that the number is always positive
        [replace_schedule]
            {DEFAULT_SCHEDULE}
            current_time="$($part_a_turns-$part_c_turns+12)"
        [/replace_schedule]

        [item]
            x,y=19,20
            image=misc/wood-end-se-broken.png
        [/item]
        [item]
            x,y=20,20
            image=misc/wood-rotting-se-nw-broken.png
        [/item]
        [item]
            x,y=21,21
            image=misc/wood-end-nw-broken.png
        [/item]

        [modify_side]
            side=3,4
            controller=null
            hidden=yes
        [/modify_side]

        [modify_side]
            side=5
            controller=human
            hidden=no
        [/modify_side]

        [modify_side]
            side=6
            controller=ai
            hidden=no
        [/modify_side]

        [unstore_unit]
            variable=stored_peasant_S12
            x,y=26,15
        [/unstore_unit]

        {VARIABLE S.peasant_leader_name $stored_peasant_S12.name}
        {CLEAR_VARIABLE stored_peasant_S12}

        [modify_unit]
            [filter]
                id=peasant_leader
            [/filter]

            side=5
            facing=sw
        [/modify_unit]

        {LOYAL_UNIT 8 Boat 6 22}
        {LOYAL_UNIT 8 Boat 20 23}

        [modify_side]
            side=3
            shroud=no
        [/modify_side]
        [redraw]
        [/redraw]

        [micro_ai]
            side=6
            ai_type=goto
            action=add

            [filter_location]
                x,y=1,17-21
            [/filter_location]

            ca_score=50000
            ignore_enemy_at_goal=yes
        [/micro_ai]

        [objectives]
            summary=_"<span color='#A050A0'>Buy Grnk Some Time</span>"
            [objective]
                description=_"Prevent the dark mages from getting to Grnk until the end of turns"
                condition=win
            [/objective]
            [objective]
                description=_"Death of $S.peasant_leader_name"
                condition=lose
            [/objective]
            [objective]
                description=_"One of the dark mages makes it to the western edge of the map"
                condition=lose
            [/objective]
            [note]
                description=_"Moving peasants onto unowned villages results in more peasants or boats joining your cause."
            [/note]
            [note]
                description=_"The same happens when moving a boat next to an unowned village."
            [/note]
            [note]
                description=_"Since there are no extra weapons to be found here, peasants leveling up will simply become (slightly) stronger peasants."
            [/note]
        [/objectives]

        {DARK_MAGES}

        {MESSAGE_GRNK peasant_leader "" "" _"Grnk, we're back. Well, I am, at least. I will round up some of my brothers right here and we will stop these evil mages."}

        # Defeat if one of the dark mages makes it to the western edge of the map
        [event]
            name=moveto

            [filter]
                side=6
                x=1
            [/filter]

            # But only during Part c
            [if]
                [not]
                    [have_unit]
                        id=Grnk
                    [/have_unit]
                [/not]

                [then]
                    {MESSAGE_RIGHT $unit.id _"Now let's get rid of that damned goblin!"}

                    [endlevel]
                        result=defeat
                    [/endlevel]
                [/then]
            [/if]
        [/event]
    [/event]

    # First time peasant message.
    # This is fired from the events inside PEASANT_EVENTS_P2S14.
    [event]
        name=first_new_peasant

        # We want there to be at least 2 peasants to appear at the first hut.
        # This is done by adding an extra peasant in this event (to the 1..2
        # random ones from PEASANT_EVENTS_P2S14). This also has the convenience
        # that we can use a fixed id for the dialog.
        [store_unit]
            [filter]
                id=peasant_leader
            [/filter]

            variable=tmp_leader
        [/store_unit]

        {CLOSE_EMPTY_HEX $tmp_leader.x $tmp_leader.y (W*,S*) 1}

        [move_unit_fake]
            type=Peasant
            side=5
            x=$tmp_leader.x,$hex_x
            y=$tmp_leader.y,$hex_y
        [/move_unit_fake]

        [unit]
            side=5
            type=Peasant no level
            id=new_peasant

            x,y=$hex_x,$hex_y
        [/unit]

        {CLEAR_VARIABLE tmp_leader,hex_x,hex_y}

        {MESSAGE_FACING peasant_leader new_peasant "" _"Brothers, the Hynderwlt wizards sent me a message. We must stop those dark mages and save Grnk, otherwise great evil will befall the world."}
        {MESSAGE_GRNK new_peasant "" "" _"Why do <i>we</i> have to do this? Why isn't Shmaltupp sending the army? It's not like he hasn't helped them also?"}
        {MESSAGE_GRNK peasant_leader "" "" _"I don't know, but I was told that this is extremely urgent. We don't have time to wait for the army, but I am sure they will be here soon too."}
        {MESSAGE_GRNK new_peasant "" "" _"Yeah, right. When's the last time you have seen anybody from Shmaltupp proper come through here. ""Take this land,"" they said, ""it's all yours."" Maybe it had some sort of strategic value back when the traders still came through here, but ever since the army pulled out of the fort it's barely possible to eek out a living any more. The soil is so infertile it isn't even worth watering, and the fish in the lake taste so badly you can't sell them anywhere. So tell me, why should we help Shmaltupp?"}
        {MESSAGE_GRNK peasant_leader "" "" _"This isn't about Shmaltupp. It's about Grnk. He is under attack by some horrible undead abomination barely a day's walk to the west and now these necromancers from the north are joining the undead. The least we can do is to try to hold them off. I'll go by myself if I have to. So are you with me or not?"}
        {MESSAGE_GRNK new_peasant "" "" _"Well, of course, I'm with you. That little goblin has stood up for our brothers many times in a way no human has in decades. I just want it to be noted that we are not happy with how things have been going here. If nothing happens soon, Shmaltupp can be certain that there will be revolts all over the place."}
        {MESSAGE_GRNK peasant_leader "" "" _"I will tell our community leaders when I get back to Lake Teehf. But let me tell you, I was there when Lieutenant Langzight took command from that bastard Koorzhar. I would not be surprised if things will change for the better soon."}
        {MESSAGE_GRNK new_peasant "" "" _"I'll believe it when I see it. Now let's get on with the business at hand."}

        # Also add a warning about the bats
        [event]
            name=side 5 turn

            {MESSAGE_FACING new_peasant peasant_leader "" _"By the way, since you are not from around here, be warned about those caves in the northwest. Every evening bats come out of them and attack anybody the can get to during the night. They disappear again in the morning."}
            {MESSAGE_GRNK peasant_leader "" "" _"Thanks, I'll keep that in mind."}
        [/event]
    [/event]

    # Side 6 units destroy all villages they move onto
    [event]
        name=first_village_burn

        {MESSAGE_GRNK Bliddyn "" "" _"Burn that peasant scum alive! We will demonstrate to the Master that we are serious about this."}
    [/event]

    {DARK_MAGES_BURN_VILLAGES 6}

    # If a bat attacks a dark mage
    [event]
        name=attack end

        [filter]
            side=7
        [/filter]
        [filter_second]
            side=6
        [/filter_second]

        {MESSAGE_GRNK $second_unit.id "" "" _"Stupid rodent!"}

        {WHITE_MISSILE_KILL $unit.id ()}

        [role]
            side=6
            [not]
                id=$second_unit.id,Bliddyn
            [/not]

            role=random_mage
        [/role]

        [message]
            role=random_mage
            message=_"Bats aren't ..."
        [/message]

        {MESSAGE_GRNK $second_unit.id "" "" _"Shut up!"}

        # After this the bats avoid the mages
        [modify_side]
            side=7

            [ai]
                [avoid]
                    [filter]
                        side=6
                    [/filter]
                    radius=2
                [/avoid]
            [/ai]
        [/modify_side]
    [/event]

    ######## Transition from Part c to Part d ########

    [event]
        name=time over
        first_time_only=no

        [modify_turns]
            add=12
        [/modify_turns]

        [fire_event]
            name=part_d
        [/fire_event]
    [/event]

    [event]
        name=part_d

        [modify_side]
            side=5
            shroud=yes
        [/modify_side]
        [redraw]
        [/redraw]

        [dialog_message]
            message=_"Which brings us back to ..."
        [/dialog_message]

        [store_unit]
            [filter]
                x=1-999
            [/filter]

            variable=stored_units_S14c
            kill=yes
        [/store_unit]

        [store_locations]
            [not]
                owner_side=0
            [/not]

            variable=stored_villages_S14c
        [/store_locations]

        [store_items]
            variable=stored_items_S14c
        [/store_items]

        [remove_item]
        [/remove_item]

        [replace_map]
            map="{~add-ons/Grnk/part2/maps/14d_Submission.map}"
            expand=yes
            shrink=yes
        [/replace_map]

        # Don't need to reset the schedule here - should be correct automatically
        # if everything is set right

        {RESET_MAP S14c 28 0 0 yes}
        {RESET_MAP S14b 18 27 0 yes}
        {RESET_MAP S14a 0 15 0 yes}

        [modify_side]
            side=2,3
            controller=human
            hidden=no
        [/modify_side]

        [modify_side]
            side=4
            controller=ai
            hidden=no
        [/modify_side]

        [modify_side]
            side=5
            shroud=no
        [/modify_side]
        [redraw]
        [/redraw]

        # We start with the side 2 turn, which is where we left off
        [modify_side]
            side=1
            controller=null
        [/modify_side]

        [event]
            name=side 2 turn

            [modify_side]
                side=1
                controller=ai
                hidden=no
            [/modify_side]
        [/event]

        # Location of Mal An's keep in Part d
        [set_variables]
            name=S.keep_Mal_An
            [value]
                x=21
                y=21
            [/value]
        [/set_variables]

        # And reset the avoid tag for the new map
        [modify_side]
            side=1

            [ai]
                [avoid]
                    x=1-12,1-14,1-16,1-18,1-20, 1-24
                    y=  22,  23,  24,  25,  26,27-39
                [/avoid]
            [/ai]
        [/modify_side]

        # The dark mages now head for Grnk
        [micro_ai]
            side=6
            ai_type=goto
            action=change

            [filter_location]
                [filter]
                    id=Grnk
                [/filter]
            [/filter_location]

            ca_score=50000
            ignore_enemy_at_goal=yes
        [/micro_ai]

        [objectives]
            summary=_"<span color='#A050A0'>Deal A Crushing Defeat To The Master's Second-In-Command</span>"
            [objective]
                description=_"Finish off Mal An and get rid of all dark mages"
                condition=win
            [/objective]
            [objective]
                [show_if]
                    [variable]
                        name=S.bridge_built
                        not_equals=yes
                    [/variable]
                [/show_if]
                description=_"Vanak's orcs must also finish the bridge"
                condition=win
            [/objective]
            [objective]
                description=_"Additionally, Vanak and Quank need to move onto the island (or farther north)"
                condition=win
            [/objective]
            [objective]
                description=_"Death of Grnk"
                condition=lose
            [/objective]
            [objective]
                description=_"Death of Vanak"
                condition=lose
            [/objective]
            [objective]
                description=_"Death of Quank"
                condition=lose
            [/objective]
            [objective]
                description=_"Death of $S.peasant_leader_name"
                condition=lose
            [/objective]
            {TURNS_RUN_OUT}
            [gold_carryover]
                bonus=yes
                carryover_percentage=40
            [/gold_carryover]
            [note]
                description=_"Any orc still being south of the island at scenario end <span color='#FF0000'>will be lost</span> to the saurians."
            [/note]
            [note]
                description=_"40% of the combined gold of all player-controlled side carries over."
            [/note]
        [/objectives]

        {MESSAGE_GRNK Grnk "" "" _"I wonder where Vanak is."}
        {MESSAGE_GRNK Vanak "" "" _"Vanak come help little goblin."}
    [/event]

    [event]
        name=last breath

        [filter]
            id=peasant_leader
        [/filter]

        {MESSAGE_GRNK peasant_leader "" "" _"I know I should say something profound, but I just cannot co..."}

        [endlevel]
            result=defeat
        [/endlevel]
    [/event]

    # The scenario ends when both Mal An and all dark mages are killed
    # This might be fired twice if Mal An is defeated early in part a
    [event]
        name=last breath
        first_time_only=no

        [filter]
            id=Mal An
        [/filter]

        {MESSAGE_GRNK (Mal An) "" "" _"Hahahahaha! You think you have won ..."}

        # If Vanak is not here, this means this happened during part a (which
        # should not be possible) -> set up a backup event in that case
        [if]
            [have_unit]
                id=Vanak
            [/have_unit]

            [then]
                # Still need Mal An in the last scenario
                [store_unit]
                    [filter]
                        id=Mal An
                    [/filter]

                    variable=stored_Mal_An_S14
                [/store_unit]
            [/then]

            [else]
                [modify_unit]
                    [filter]
                        id=Mal An
                    [/filter]

                    hitpoints=1
                [/modify_unit]

                {DEBUG_ERROR_MESSAGE _"If you see this, it means that the scenario is not balanced well enough (you should not be able to kill Mal An this quickly). You can probably continue the scenario (although a later part will likely be easier than intended), but please consider reporting this as described below."}

                [fire_event]
                    name=part_b
                [/fire_event]

                [modify_turns]
                    current="$($part_a_turns+1)"
                [/modify_turns]

                # And end turn of the current side
                [end_turn]
                [/end_turn]

                # Need to set ToD here again (see part_b event)
                [replace_schedule]
                    {DEFAULT_SCHEDULE}
                    current_time="$($part_a_turns-$part_b_turns+12)"
                [/replace_schedule]
            [/else]
        [/if]
    [/event]

    [event]
        name=die

        [filter]
            id=Mal An
        [/filter]

        {MESSAGE_GRNK Grnk "" "" _"Strange. He did not disappear into a cloud of smoke like all the others."}

        [store_unit]
            [filter]
                id=Grnk
            [/filter]

            variable=tmp_Grnk
        [/store_unit]

        [move_unit_fake]
            type=$unit.type
            x=$unit.x,$tmp_Grnk.x
            y=$unit.y,$tmp_Grnk.y
            image_mods=~GS()~O(15%)
        [/move_unit_fake]

        {MESSAGE_GRNK Grnk "" "" {GASP _"shiver"}}

        {CLEAR_VARIABLE tmp_Grnk}

        # Check if the scenario is done
        [fire_event]
            name=is_S14_done
            [primary_unit]
                id=$unit.id
            [/primary_unit]
            [secondary_unit]
                id=$second_unit.id
            [/secondary_unit]
        [/fire_event]
    [/event]

    [event]
        name=last breath
        first_time_only=no

        [filter]
            side=6
        [/filter]

        # If this was the last of the dark mages
        [if]
            [not]
                [have_unit]
                    side=6
                [/have_unit]
            [/not]

            [then]
                {MESSAGE_GRNK $unit.id "" "" _"I hate goblins."}

                [kill]
                    id=$unit.id
                    animate=yes
                [/kill]

                # Check if scenario is done
                # Except if this happens before we have transitioned to part d (which
                # should not be possible), in which case we force the transition
                [if]
                    [have_unit]
                        id=Grnk
                    [/have_unit]

                    [then]
                        [fire_event]
                            name=is_S14_done
                            [primary_unit]
                                id=$unit.id
                            [/primary_unit]
                            [secondary_unit]
                                id=$second_unit.id
                            [/secondary_unit]
                        [/fire_event]
                    [/then]

                    [else]
                        {DEBUG_ERROR_MESSAGE _"If you see this, it means that the scenario is not balanced well enough (you should not be able to kill all the dark mages this quickly). You can probably continue the scenario, but please consider reporting this as described below."}

                        [fire_event]
                            name=part_d
                        [/fire_event]

                        [modify_turns]
                            add=15
                            current="$($part_a_turns+$part_b_turns+$part_c_turns+1)"
                        [/modify_turns]

                        # And end turn of the current side
                        [end_turn]
                        [/end_turn]

                        # Need to set ToD here again (see part_c event)
                        [replace_schedule]
                            {DEFAULT_SCHEDULE}
                            current_time=$part_a_turns
                        [/replace_schedule]
                    [/else]
                [/if]
            [/then]
        [/if]
    [/event]

    # Moving Quank or Vanak far enough north might also end the scenario
    [event]
        name=moveto
        first_time_only=no
        [allow_undo]
        [/allow_undo]

        [filter]
            id=Quank,Vanak
            y=1-35
        [/filter]

        [fire_event]
            name=is_S14_done
        [/fire_event]
    [/event]

    # The scenario is done when Mal An and all dark mages are gone and the
    # bridge is built (but only in the last part of the scenario)
    [event]
        name=is_S14_done
        first_time_only=no

        [if]
            [have_unit]
                id=Grnk
            [/have_unit]
            [have_unit]
                id=Vanak
                y=1-35
            [/have_unit]
            [have_unit]
                id=Quank
                y=1-35
            [/have_unit]
            [not]
                [have_unit]
                    id=Mal An
                [/have_unit]
            [/not]
            [not]
                [have_unit]
                    side=6
                [/have_unit]
            [/not]
            [variable]
                name=S.bridge_built
                equals=yes
            [/variable]

            [then]
                [fire_event]
                    name=S15_done
                    [primary_unit]
                        id=$unit.id
                    [/primary_unit]
                    [secondary_unit]
                        id=$second_unit.id
                    [/secondary_unit]
                [/fire_event]
            [/then]
        [/if]
    [/event]

    [event]
        name=S15_done

        # Need to apply XP for last kill manually, since we are then storing away
        # all units. This also means that units need to be killed when stored below.
        [if]
            [variable]
                name=unit.length
                not_equals=0
            [/variable]

            [then]
                {GIVE_KILL_EXPERIENCE_BEFORE_STORE $second_unit.id $unit.level}
            [/then]
        [/if]

        # Any orc still south of the island is lost
        # This location filter is not entirely exact, but the exceptions are unrealistic
        [kill]
            side=3
            y=36-99
        [/kill]

        # Store all units. We do this manually rather than trying to carry
        # them over, since we want a new and different side in the last scenario
        # Also store leaders separately from the rest of the units
        [store_unit]
            [filter]
                id=Grnk
            [/filter]

            variable=stored_Grnk_S14
            kill=yes
        [/store_unit]

        [store_unit]
            [filter]
                id=Vanak
            [/filter]

            variable=stored_Vanak_S14
            kill=yes
        [/store_unit]

        [store_unit]
            [filter]
                id=Quank
            [/filter]

            variable=stored_Quank_S14
            kill=yes
        [/store_unit]

        [store_unit]
            [filter]
                id=peasant_leader
            [/filter]

            variable=stored_peasant_leader_S14
            kill=yes
        [/store_unit]

        [store_unit]
            [filter]
                id=saurian_leader
            [/filter]

            variable=stored_saurian_leader_S14
            kill=yes
        [/store_unit]

        # This needs to include units on the recall lists this time.
        # Also include boats still on Side 8.
        # Use different variable name, so that they do not get put on the map by RESET_MAP.
        [store_unit]
            [filter]
                side=2,3,5,8
                [not]
                    id=Grnk,Vanak,Quank,peasant_leader
                [/not]
            [/filter]

            variable=stored_other_units_S14
            kill=yes
        [/store_unit]

        # Also store all the map information; saurian villages stored separately
        [store_locations]
            owner_side=2
            [or]
                owner_side=3
            [/or]
            [or]
                owner_side=5
            [/or]

            variable=stored_villages_S14
        [/store_locations]
        [store_locations]
            owner_side=4
            variable=stored_saurian_villages_S14
        [/store_locations]

        [store_items]
            variable=stored_items_S14
        [/store_items]

        [store_locations]
            terrain=Wo^B*

            variable=stored_bridges_S14
        [/store_locations]

        # Add the gold from sides 3 and 5 to side 2, for the carry-over calculation
        [store_gold]
            side=3
            variable=S.gold3
        [/store_gold]
        [store_gold]
            side=5
            variable=S.gold5
        [/store_gold]

        [gold]
            side=2
            amount="$($S.gold3+$S.gold5)"
        [/gold]

        # Disable sides 3 and 5 so that no carry-over report is shown for them
        [modify_side]
            side=3,5
            controller=null
        [/modify_side]

        # House cleaning
        {CLEAR_VARIABLE S,part_a_turns,part_b_turns,part_c_turns}

        [endlevel]
            result=victory
            bonus=yes
            carryover_add=yes
            carryover_percentage=40
            carryover_report=yes
            linger_mode=yes
        [/endlevel]
    [/event]

    # Finally, the standard events for all or most scenarios
    {GRNK_DEATH}
    {VANAK_DEATH}
    {QUANK_DEATH}
    {GRASHNAK_DEATH}
[/scenario]
