#textdomain wesnoth-Grnk

[scenario]
    id=03_Treasure
    name=_"Treasure"
    next_scenario=02_Shmaltupp_02

    map_data="{~add-ons/Grnk/part1/maps/03_Treasure.map}"

    {DEFAULT_SCHEDULE}
    {TURNS 40 36 34}
    victory_when_enemies_defeated=no

    {GRNK_STORY_03}

    [side]
        side=1
        controller=human
        id=Rutburt

        team_name=Rutburt
        user_team_name=_"Bandits"

        {GOLD 196 137 103}
        income=0
    [/side]

    [side]
        side=2
        controller=ai
        id=woodsmen_leader
        type=Trapper

        team_name=Faulorn
        user_team_name=_"Faulorn's Woodsmen"

        recruit=Thief,Woodsman,Poacher,Ruffian,Footpad,Thug,Peasant,Bowman

        {GOLD 79 99 149}
    [/side]

    [side]
        side=3
        controller=ai
        id=Faulorn
        type=Master at Arms
        name=_"Faulorn"

        facing=sw

        gender=male
        unrenamable=yes

        team_name=Faulorn
        user_team_name=_"Faulorn's Army"

        {GOLD 123 173 223}
    [/side]

    # Guards
    [side]
        side=4
        controller=ai
        no_leader=yes

        team_name=Faulorn
        user_team_name=_"Faulorn's Treasure Guards"

        gold=0
        income=-2

        [ai]
            aggression=1.0
            caution=0.0
        [/ai]
    [/side]

    {GRNK_DUMMY_SIDE 5}

    [event]
        name=prestart

        # Label and items
        {PLACE_IMAGE "scenery/signpost.png" 1 6}
        {SET_LABEL 1 6 _"To Shmaltupp"}
        {PLACE_IMAGE "scenery/signpost.png" 1 28}
        {SET_LABEL 1 28 _"To Shmaltupp"}
        {PLACE_IMAGE "items/chest-plain-closed.png" 43 15}
        {SET_LABEL 34 22 _"Versholn Valley"}
        {SET_LABEL 47 22 _"Faulorn's Castle"}
        {SET_LABEL 42 15 _"Faulorn's Fortress"}
        {SET_LABEL 31 8 _"Ol' Ogram's Keep"}

        # Get Grnk
        {GET_GRNK_FROM_DUMMY_SIDE 5 1}
        # He does not cost money while working for Rutburt
        {MAKE_GRNK_LOYAL ()}

        # Faulorn's sentinel
        {UNIT 3 Ruffian 45 25 (id,facing=sentinel1,sw)}

        # The treasure chest guards
        {UNIT 4 Swordsman 41 15 (id,upkeep,facing=guard1,0,sw)}
        {UNIT 4 Longbowman 42 16 (id,upkeep,facing=guard2,0,sw)}

        # Give the enemy sides some starting villages
        [capture_village]
            side=2
            x=1-25
            y=1-25
        [/capture_village]
        [capture_village]
            side=3
            x=40-99
        [/capture_village]
        [capture_village]
            side=3
            x,y=34,12
        [/capture_village]

        # Turn on which Faulorn's sentinels are back
        [set_variable]
            name=S3.units_return_turn
            {QUANTITY value 14 11 9}
        [/set_variable]

        # Counter for loyal units that have returned to Shmaltupp
        {VARIABLE S3.units_returned_weight 0}
    [/event]

    [event]
        name=start

        {MESSAGE_FACING_RIGHT Grnk Rutburt "" _"Now will you tell me what this mission is all about?"}
        {MESSAGE_RIGHT Rutburt _"Old Faulorn over there has something that doesn't belong to him."}
        {MESSAGE_RIGHT Grnk _"Faulorn? You mean Lord Faulorn, the noble Master at Arms?"}
        {MESSAGE_RIGHT Rutburt _"He's a Master at Arms alright, but 'noble' is not a word I would use for him and he sure as hell ain't no lord. In fact, you and I ...
<i> </i>
Oh, there are the chaps. Let's see what they have found out."}

        # Loyal units to go with Rutburt
        {LOYAL_UNIT 1 Bandit 8 28}
        [+unit]
            id=Rutburt_unit1
            animate=yes
            facing=sw
        [/unit]
        {LOYAL_UNIT 1 Trapper 7 28}
        [+unit]
            id=Rutburt_unit2
            animate=yes
            facing=sw
        [/unit]
        {LOYAL_UNIT 1 Footpad 8 29}
        [+unit]
            id=Rutburt_unit3
            animate=yes
            facing=sw
        [/unit]
        {LOYAL_UNIT 1 Footpad 9 28}
        [+unit]
            id=Rutburt_unit4
            animate=yes
            facing=sw
        [/unit]

        {MOVE_UNIT id=Rutburt_unit1 3 29}
        {MOVE_UNIT id=Rutburt_unit2 3 30}
        {MOVE_UNIT id=Rutburt_unit3 3 28}
        {MOVE_UNIT id=Rutburt_unit4 2 30}

        {STORE_UNIT_VAR id=Rutburt_unit1 name Ru_name1}
        {MESSAGE_RIGHT Rutburt_unit1 _"Hello, Rutburt. Why is there a goblin with you? Have we really sunk that low?"}
        {MESSAGE_RIGHT Rutburt _"Hello, $Ru_name1. Good to see you too! This is Grnk and I'm going on a hunch here that he is no ordinary goblin. Just listen to him speak. Also, he comes with compliments of Gertburt."}
        {MESSAGE_RIGHT Rutburt_unit1 _"Gertburt, eh? That old ...
<i> </i>
Well, anyway, we have good news. Faulorn's greed has gotten the better of him again. He sent almost all his men on a raid against the saurians in the Eldryanic Swamps. Apparently, they are hoarding some huge treasure. He even pulled off all but the southern sentinel. We don't expect them back for about 2 days, give or take."+{NOTE _"'About 2 days, give or take' on this difficulty level means: on turn $S3.units_return_turn."}}
        {MESSAGE_RIGHT Rutburt _"That's good news indeed. With only that sentinel in place, Faulorn cannot see what is going on inside Versholn Valley, so let's go through there."}

        {HIGHLIGHT_LABEL 34 22 _"Versholn Valley"}

        {MESSAGE_RIGHT Rutburt_unit2 _"And what happens then?"}
        {MESSAGE_RIGHT Rutburt _"I don't know yet. I'll figure it out as we go along. But one thing is certain, we must hurry and take Faulhorn by surprise. We cannot let them woodsmen up there delay us, even if they're still bitter about last time."}
        {CLEAR_VARIABLE Ru_name1}

        [objectives]
            side=1
            summary=_"<span color='#A050A0'>Relieve Faulorn Of His Unearned Treasure And Return To Shmaltupp</span>"
            [objective]
                description=_"Move toward Faulhorn's fortress as quickly as possible"
                condition=win
            [/objective]
            [objective]
                description=_"Then steal his gold and return to Shmaltupp"
                condition=win
            [/objective]
            [objective]
                description=_"Death of Grnk"
                condition=lose
            [/objective]
            [objective]
                description=_"Death of Rutburt"
                condition=lose
            [/objective]
            {TURNS_RUN_OUT}
            [gold_carryover]
                bonus=no
                carryover_percentage=40
            [/gold_carryover]
        [/objectives]
    [/event]

    # Dialog concerning sharing the money
    [event]
        name=moveto

        [filter]
            id=Rutburt
            x,y=8,26
        [/filter]

        {MESSAGE_RIGHT Rutburt _"One more thing, chaps, before I start recruiting. We split the money the usual way. The men recruited here just get their wages. The rest of us does not get wages, instead we split the bounty at the end of the mission, distributed as alway by battle experience.  You understand that, Grnk?"+{NOTE _"In practice this means that each of Rutburt's starting units gets one equal share per experience level (1 share for a Level 1 unit, 2 shares for a Level 2 unit, etc.)."}}
        {MESSAGE_RIGHT Grnk _"Indeed. But doesn't that mean that the fewer of us survive, the more money the rest ..."}
        {MESSAGE_RIGHT Rutburt _"A goblin who can do maths, amazing! But no, we don't work that way. We take care of our own. We will abort the mission if more than 2 of the 6 of us are killed."}

        {STORE_UNIT_VAR id=Grnk level Grnk_level}
        {IF_VAR Grnk_level equals 0 (
            [then]
                {MESSAGE_RIGHT Rutburt _"It does mean, however, that you will not get a share if you have not gained some fighting experience by the time we get back to Shmaltupp."+{NOTE _"Make sure to check out the new objectives carefully, in particular the defeat conditions."}}
            [/then]
        )}
        {CLEAR_VARIABLE Grnk_level}

        {MESSAGE_RIGHT Grnk _"I see."}

        [objectives]
            side=1
            summary=_"<span color='#A050A0'>Relieve Faulorn Of His Unearned Treasure And Return To Shmaltupp</span>"
            [objective]
                description=_"Move toward Faulhorn's fortress as quickly as possible"
                condition=win
            [/objective]
            [objective]
                description=_"Then steal his gold and return to Shmaltupp"
                condition=win
            [/objective]
            [objective]
                description=_"Death of Grnk"
                condition=lose
            [/objective]
            [objective]
                description=_"Death of Rutburt"
                condition=lose
            [/objective]
            [objective]
                description=_"More than two of the loyal starting units are killed"
                condition=lose
            [/objective]
            [objective]
                description=_"Grnk has not advanced to Level 1 by the end of the scenario"
                condition=lose
            [/objective]
            {TURNS_RUN_OUT}
            [gold_carryover]
                bonus=no
                carryover_percentage=40
            [/gold_carryover]
        [/objectives]
    [/event]

    # Faulorn is impatient
    [event]
        name=side 3 turn 5

        {MESSAGE Faulorn "" "" _"Where are those morons? What can possibly be taking them so long? Do you see anybody yet?"}
        {MESSAGE sentinel1 "" "" _"No, nobody in sight yet, my lord. It should only be another day now, give or take a little."}
        {MESSAGE Faulorn "" "" _"They better be here soon, we're much too vulnerable without the sentinels."}
        {MESSAGE sentinel1 "" "" {WHISPER _"If you hadn't sent everybody away ..."}}
    [/event]

    # The rest of the plan
    [event]
        name=moveto

        [filter]
            side=1
            x=32-99
        [/filter]

        {MESSAGE Rutburt "" "" _"Alright, chaps, here's the plan. Faulorn will not see us as long as we are inside Versholn Valley. We can also hide in the mountains and forested hills on its eastern end. So let's line up over there and take him by surprise. The later he sees us the better. You got that, Grnk?"}
        {MESSAGE Grnk "" "" _"You can stop asking that all the time. I am not as dumb as I look."}
        {MESSAGE Rutburt "" "" _"Very good. Our goal is actually not Faulorn's castle itself, but his fortress a little to the north. That's were he keeps his money."}

        {HIGHLIGHT_LABEL 42 15 _"Faulorn's Fortress"}

        {MESSAGE Grnk "" "" _"That's a rather odd setup. Why would he do it that way?"}

        {GET_RANDOM_UNIT_ID (
            id=Rutburt_unit1,Rutburt_unit2,Rutburt_unit3,Rutburt_unit4
        )}
        {STORE_UNIT_VAR id=$random_unit_id name Rt_name}
        {MESSAGE Rutburt "" "" _"Two reasons, really. First, this was all built a long time ago. I don't think the people who built the castle knew of the hidden valley behind the fortress. But the main reason is that Faulorn is, how do I put this nicely ... a megalomaniac idiot who has no concept of how the real world works."}
        {MESSAGE Grnk "" "" _"Put very nicely indeed."}
        {MESSAGE Rutburt "" "" _"How many guards are there at the fortress, $Rt_name?"}
        {MESSAGE $random_unit_id "" "" _"It's hard to say since they spend most of their time somewhere in the dungeons drinking and playing cards. My guess would be not much more than half a dozen."}
        {MESSAGE Rutburt "" "" _"That's not too bad then. Faulorn is going to charge as soon as he sees us, but these guards are cheap mercenaries who only care about their pay. They will stay in place unless we provoke them by attacking them or stepping into the fortress."}
        {MESSAGE $random_unit_id "" "" _"But then, how do we get to the money?"}
        {MESSAGE Rutburt "" "" _"That's where little Grnk here comes in. I bet he knows how to sneak by them and take the gold."}
        {MESSAGE Grnk "" "" _"I can do that!"}
        {MESSAGE Rutburt "" "" _"I suspected that you have some talents to that effect. Be warned though that the chest is almost certainly alarmed. If I were you, I'd move in and out as quickly as possible."}
        {MESSAGE Grnk "" "" _"Your concern for me is touching ..."}
        {MESSAGE Rutburt "" "" _"I just want to make sure that I get my money."}
        {CLEAR_VARIABLE random_unit_id,Rt_name}
    [/event]

    # Keep the side 4 guards in place, until they are activated
    [event]
        name=side 4 turn refresh
        first_time_only=no

        {IF_VAR S3.guards_out not_equals yes (
            [then]
                {MODIFY_UNIT side=4 moves 0}
                {MODIFY_UNIT side=4 attacks_left 0}
            [/then]
        )}
    [/event]

    # Also keep the sentinel(s) in place, until Rutburt et al. are discovered
    [event]
        name=side 3 turn refresh
        first_time_only=no

        {IF_VAR S3.Rutburt_discovered not_equals yes (
            [then]
                {MODIFY_UNIT id=sentinel1 moves 0}
                {MODIFY_UNIT id=sentinel2 moves 0}
                {MODIFY_UNIT id=sentinel3 moves 0}
                {MODIFY_UNIT id=Faulhorn_units_leader moves 0}
            [/then]
        )}
    [/event]

    # Mobilze Side 3 once we get out of or around mountains
    # This is the event itself that can be triggered in a number of ways (but only once total)
    [event]
        name=mobilize_Faulorn

        {MESSAGE $unit.id "" "" _"Somebody's approaching!"}
        {MESSAGE Faulorn "" "" _"They caught us unprepared! Everybody, attack!"}

        [modify_side]
            side=3
            recruit=Fencer,Ruffian,Footpad,Thug,Outlaw,Bandit,Thief,Rogue,Woodsman,Bowman,Poacher,Young Ogre,Ogre
        [/modify_side]

        {LIMIT_CONTEMPORANEOUS_RECRUITS 3 Outlaw 1}
        {LIMIT_CONTEMPORANEOUS_RECRUITS 3 Bandit 1}
        {LIMIT_CONTEMPORANEOUS_RECRUITS 3 Rogue 1}
        {LIMIT_CONTEMPORANEOUS_RECRUITS 3 Ogre 2}

        # Set flag so that sentinels goes places etc.
        {VARIABLE S3.Rutburt_discovered yes}
    [/event]

    # Before the sentinels are back
    # This can always be active, doesn't matter
    [event]
        name=moveto

        [filter]
            [and]
                side=1
            [/and]
            [and]
                x=40-99
                [or]
                    x=34-39
                    y=1-19
                    [not]
                        [filter_location]
                            terrain=*^F*,M*
                        [/filter_location]
                    [/not]
                [/or]
            [/and]
        [/filter]

        [fire_event]
            name=mobilize_Faulorn
            [primary_unit]
                id=sentinel1
            [/primary_unit]
        [/fire_event]
    [/event]

    # After the sentinels are back
    [event]
        name=moveto

        [filter]
            side=1
            x=28-99
        [/filter]
        [filter_condition]
            [have_unit]
                side=3
                x,y=41,21
                type=Thief
            [/have_unit]
        [/filter_condition]

        [fire_event]
            name=mobilize_Faulorn
            [primary_unit]
                id=sentinel2
            [/primary_unit]
        [/fire_event]
    [/event]

    # Faulorn's units are back
    [event]
        name=side 3 turn refresh
        first_time_only=no

        {IF_VAR turn_number equals $S3.units_return_turn (
            [then]
                {MOVE_UNIT_ONTO_MAP 3 "Bandit" 51 25 sw (id=Faulhorn_units_leader)}
                {MOVE_UNIT (x,y=51,25) 50 24}
                {MOVE_UNIT_ONTO_MAP 3 "Woodsman" 51 24 nw (id=Faulhorn_unit0)}
                {MOVE_UNIT (x,y=51,24) 50 23}
                {MOVE_UNIT_ONTO_MAP 3 "Bandit" 51 25 sw (id=Faulhorn_unit1)}
                {MOVE_UNIT (x,y=51,25) 50 25}
                {MOVE_UNIT_ONTO_MAP 3 "Footpad" 51 24 nw (id=Faulhorn_unit2)}
                {MOVE_UNIT_ONTO_MAP 3 "Thief" 51 26 sw (id=Faulhorn_unit4)}
                {MOVE_UNIT_ONTO_MAP 3 "Bowman" 51 25 sw (id=Faulhorn_unit3)}

                {MOVE_UNIT_ALONG_PATH Faulhorn_units_leader (49,46) (25,23) 46 22 ne}
                {MODIFY_UNIT id=Faulhorn_units_leader moves 0}

                {REPEAT 5 (
                    {MOVE_UNIT_ALONG_PATH Faulhorn_unit$REPEAT_i (49,47) (25,24) 47 23 n}
                    [kill]
                        id=Faulhorn_unit$REPEAT_i
                    [/kill]
                )}

                {MESSAGE_FACING Faulhorn_units_leader Faulorn "" _"We're back, my lord. I bring you 287 gold, courtesy of the late saurian leader of the Eldryanic Swamps."}

                [gold]
                    side=3
                    amount=287
                [/gold]

                {IF_VAR S3.Rutburt_discovered not_equals yes (
                    [then]
                        {MESSAGE Faulorn "" "" _"Only 287?!? That's an outrage! And what took you so long? Who knows what enemies have snuck up on us the the meantime. Deploy the sentinels!"}
                        {MESSAGE Faulhorn_units_leader "" "" _"But, my lord, they are exhausted. They just marched ..."}
                        {MESSAGE Faulorn "" "" _"I don't care. We have been without lookouts for too long because of your tardiness. And you better step out there yourself or I will have your head on a spike before you can even blink!"}
                        {MESSAGE Faulhorn_units_leader "" "" {GASP _"grumbles"}}

                        {MOVE_UNIT id=Faulhorn_units_leader 45 22}

                        {UNIT 3 "Footpad" 46 22 (id=sentinel3)}
                        {MOVE_UNIT_ALONG_PATH sentinel3 (46,45,45,40) (21,21,19,16) 40 13 sw}
                        {MODIFY_UNIT id=sentinel3 moves 0}
                        {UNIT 3 "Thief" 46 22 (id=sentinel2)}
                        {MOVE_UNIT_ALONG_PATH sentinel2 (46,43) (21,20) 41 21 sw}
                        {MODIFY_UNIT id=sentinel2 moves 0}

                        # If units in the west, Sentinel 2 discovers them
                        [if]
                            [have_unit]
                                side=1
                                x=28-99
                                y=13-99
                            [/have_unit]

                            [then]
                                [fire_event]
                                    name=mobilize_Faulorn
                                    [primary_unit]
                                        id=sentinel2
                                    [/primary_unit]
                                [/fire_event]
                            [/then]
                        [/if]

                        # If units in the north, Sentinel 3 discovers them
                        [if]
                            [have_unit]
                                side=1
                                x=28-99
                                y=1-12
                            [/have_unit]

                            [then]
                                [fire_event]
                                    name=mobilize_Faulorn
                                    [primary_unit]
                                        id=sentinel3
                                    [/primary_unit]
                                [/fire_event]
                            [/then]
                        [/if]
                    [/then]

                    [else]
                        {MESSAGE Faulorn "" "" _"Only 287?!? That's an outrage! And look at the mess your tardiness created. The enemy has snuck up on us. We could have avoided this if you had been back in time with the sentinels."}
                        {MESSAGE Faulhorn_units_leader "" "" _"If you had not sent them with us as I advised you, my lord, we ..."}
                        {MESSAGE Faulorn "" "" _"Quiet!!! I will hear no such insubordination! You better step out there and join the fight right now or I will have your head on a spike before you can even blink!"}
                        {MESSAGE Faulhorn_units_leader "" "" {GASP _"grumbles"}}

                        {MOVE_UNIT id=Faulhorn_units_leader 45 22}
                    [/else]
                )}
            [/then]
        )}
    [/event]

    # When Faulorn recruits an ogre
    [event]
        name=recruit

        [filter]
            side=3
            type=Young Ogre,Ogre
        [/filter]

        {SCROLL_TO 47 22}
        {MESSAGE_NOSCROLL Grnk _"What the ...? He's recruiting ogres!"}
        {MESSAGE_NOSCROLL Rutburt _"I told you that he's not the nobleman he's pretending to be."}
    [/event]

    # This part is omitted, to stream-line things just a little
    # Chit-chat with guards when moving next to them
    # But only if they have not been triggered previously
    #[event]
    #    name=moveto
    #    [filter]
    #        side=1
    #        x,y=41,16
    #        [not]
    #            id=Grnk
    #        [/not]
    #    [/filter]

    #    {IF_VAR S3.guards_out not_equals yes (
    #        [then]
    #            {MESSAGE $unit.id "" "" _"Hello there. Pleasant day today, isn't it?"}
    #            {MESSAGE guard1 "" "" _"What do you want, $unit.type?"}
    #            {MESSAGE $unit.id "" "" _"Nothing, really, just taking a stroll through the countryside."}
    #            {MESSAGE guard2 "" "" _"Right. With all your buddies over there. And no mischief on your mind at all!"}
    #            {MESSAGE $unit.id "" "" _"Exactly."}
    #            {MESSAGE guard2 "" "" _"You better watch it. One wrong move and we will strike you down hard."}
    #            {MESSAGE $unit.id "" "" _"You're such pleasant fellows."}
    #        [/then]
    #    )}
    #[/event]

    # Activate the guards
    # Event itself that has several triggers (but only executed once)
    [event]
        name=mobilize_guards

        {MESSAGE guard1 "" "" _"Alarm!"}
        {CLOSE_EMPTY_HEX 43 17 "*^X*" 0}
        {UNIT 4 "Spearman" $hex_x $hex_y (id,upkeep,facing=guard3,0,sw)}
        {CLEAR_VARIABLE hex_x,hex_y}
        {MESSAGE guard3 "" "" _"Here I am."}
        {MESSAGE guard1 "" "" _"What the hell is this?! Where are the others?"}
        {MESSAGE guard3 "" "" _"They, ahem, they weren't ready. They will be here in a moment."}
        {MESSAGE guard1 "" "" _"They better! Somebody is trying to steal the gold. Let's get them."}

        {VARIABLE S3.guards_out yes}

        [event]
            name=side 4 turn end

            {CLOSE_EMPTY_HEX 43 17 "*^X*" 0}
            {UNIT 4 "Heavy Infantryman" $hex_x $hex_y (upkeep,facing=0,sw)}
            {CLOSE_EMPTY_HEX 42 16 "*^X*" 0}
            {UNIT 4 "Bowman" $hex_x $hex_y (upkeep,facing=0,sw)}
            {CLOSE_EMPTY_HEX 42 15 "*^X*" 0}
            {UNIT 4 "Spearman" $hex_x $hex_y (upkeep,facing=0,sw)}
            {CLEAR_VARIABLE hex_x,hex_y}

            {MESSAGE guard1 "" "" _"It's about time you make it out here!"}
        [/event]
    [/event]

    # Trigger guards when stepping onto castle
    [event]
        name=moveto

        [filter]
            side=1
            x=41,42,42,43
            y=15,15,16,17
        [/filter]

        [fire_event]
            name=mobilize_guards
        [/fire_event]
    [/event]

    # Decided to drop this, makes the scenario too complicated
    # Also trigger guards when stepping into passage without them being distracted
    #[event]
    #    name=moveto
    #    first_time_only=no
    #    [filter]
    #        side=1
    #        x,y=43,15
    #    [/filter]

    #    [if]
    #        [not]
    #            [have_unit]
    #                side=1
    #                x,y=41,16
    #            [/have_unit]
    #        [/not]
    #        [then]
    #            [fire_event]
    #                name=mobilize_guards
    #            [/fire_event]
    #        [/then]
    #    [/if]
    #[/event]

    # Attack on guards also triggers the others
    #   (except pickpocketing, which is allowed)
    [event]
        name=attack end

        [filter_second]
            side=4
        [/filter_second]
        [filter_attack]
            [not]
                name=pickpocket
            [/not]
        [/filter_attack]

        [fire_event]
            name=mobilize_guards
        [/fire_event]
    [/event]

    # If somebody other than Grnk makes it to the chest
    [event]
        name=moveto

        [filter]
            side=1
            x,y=43,15
            [not]
                id=Grnk
            [/not]
        [/filter]

        {IF_VAR S3.Grnk_got_gold not_equals yes (
            [then]
                {MESSAGE $unit.id "" "" _"Rats! I don't know how to pick this lock. I should have let Grnk do it after all."}
            [/then]

            [else]
                {MESSAGE $unit.id "" "" _"It's empty."}
            [/else]
        )}
    [/event]

    # Trigger guards (and set up victory event) when Grnk gets gold
    [event]
        name=moveto

        [filter]
            id=Grnk
            x,y=43,15
        [/filter]

        {SOUND "open-chest.wav"}
        {PLACE_IMAGE "items/chest-plain-open.png" 43 15}
        {SOUND "gold.ogg"}
        {ADD_INVENTORY_ITEM "Sack of gold, heavy" goldsack}
        {VARIABLE S3.Grnk_got_gold yes}

        [fire_event]
            name=mobilize_guards
        [/fire_event]

        {MESSAGE Rutburt "" "" _"Looks like the little goblin made it. Everybody, stand your ground until he's out, then retreat either back through the valley or to the north. If we make it to Ol' Ogram's Keep, we can use some of the bounty to hire a few more men."+{NOTE _"If you want to recruit more units at Ol' Ogram's Keep, you first need to give the money to Rutburt by moving Grnk and Rutburt next to each other."}}

        [objectives]
            side=1
            summary=_"<span color='#A050A0'>Return To Shmaltupp</span>"
            [objective]
                description=_"Move Grnk, Rutburt and at least two of the loyal starting units to one of the two signposts"
                condition=win
            [/objective]
            [objective]
                description=_"Rutburt needs to leave last"
                condition=win
            [/objective]
            [objective]
                description=_"Death of Grnk"
                condition=lose
            [/objective]
            [objective]
                description=_"Death of Rutburt"
                condition=lose
            [/objective]
            [objective]
                description=_"More than two of the loyal starting units are killed"
                condition=lose
            [/objective]
            [objective]
                description=_"Grnk has not advanced to Level 1 by the time he reaches the signpost"
                condition=lose
            [/objective]
            [objective]
                description=_"Rutburt is not the last of the 4 required units to leave"
                condition=lose
            [/objective]
            {TURNS_RUN_OUT}
            [gold_carryover]
                bonus=no
                carryover_percentage=40
            [/gold_carryover]
            [note]
                description=_"Only units that make it to a signpost before Rutburt will be available to him in the future"
            [/note]
            [note]
                description=_"This applies to both the loyal starting units and new recruits"
            [/note]
        [/objectives]

        # If more recruiting is desired, need to move Rutburt and Grnk next to each other
        [event]
            name=moveto

            [filter]
                id=Grnk,Rutburt
                [filter_adjacent]
                    id=Grnk,Rutburt
                [/filter_adjacent]
            [/filter]

            {MESSAGE Grnk "" "" _"Here's the gold, Rutburt."}
            {MESSAGE Rutburt "" "" _"I'm glad to see that my trust in you was justified. Some of the chaps expected you to run as soon as you got it."}
            {MESSAGE Grnk "" "" _"Yeah, well, I came to Shmaltupp to get away from that never-ending cycle of stealing and running and stealing and running. Now that I got here, what's the first thing I do? Steal and run! The least I can do is keep my promises to those I steal and run with."}

            {REMOVE_INVENTORY_ITEM goldsack}
            [gold]
                side=1
                {QUANTITY amount 120 90 60}
            [/gold]
        [/event]

        # Nested event: Finish by getting Grnk, Rutburt and 2 other starting units to the signpost
        # Other units that make it will also be placed on recall list, everybody else is lost
        [event]
            name=moveto
            first_time_only=no

            [filter]
                [and]
                    side=1
                    # id=Grnk,Rutburt,Rutburt_unit1,Rutburt_unit2,Rutburt_unit3,Rutburt_unit4
                [/and]
                [and]
                    x,y=1,6
                    [or]
                        x,y=1,28
                    [/or]
                [/and]
            [/filter]

            [switch]
                variable=unit.id

                [case]  # Rutburt returns
                    value=Rutburt

                    {VARIABLE S3.Rutburt_portrait $unit.profile}
                    {VARIABLE_OP S3.units_returned_weight add 10}
                    {IF_VAR S3.units_returned_weight less_than 22 (
                        [then]
                            {NARRATOR_GRAY "" _"Rutburt needs to be the last of the 4 units to leave."}
                            # Also, in order to keep victory condition to kick in:
                            {VARIABLE S3.units_returned_weight 0}
                            [endlevel]
                                result=defeat
                            [/endlevel]
                        [/then]

                        [else]
                            {MESSAGE $unit.id "" "" _"Back to good old Shmaltupp."}
                        [/else]
                    )}
                [/case]

                [case]  # Grnk returns
                    value=Grnk

                    {VARIABLE S3.Grnk_portrait $unit.profile}
                    {VARIABLE_OP S3.units_returned_weight add 10}
                    {IF_VAR unit.level less_than 1 (
                        [then]
                            {NARRATOR_GRAY "" _"Grnk did not advance to Level 1. He will not get a share of the bounty and cannot move on."}
                            # Also, in order to keep victory condition from kicking in:
                            {VARIABLE S3.units_returned_weight 0}
                            [endlevel]
                                result=defeat
                            [/endlevel]
                        [/then]

                        [else]
                            {MESSAGE $unit.id "" "" _"It's hard to believe, but I'm actually looking forward to getting back to Shmaltupp."}
                        [/else]
                    )}
                [/case]

                [case]  # Loyal starting unit returns
                    value=Rutburt_unit1,Rutburt_unit2,Rutburt_unit3,Rutburt_unit4
                    {VARIABLE_OP S3.units_returned_weight add 1}
                    {VARIABLE S3.units_returned_number $S3.units_returned_weight}
                    {VARIABLE_OP S3.units_returned_number modulo 10}
                    #{DEBUG "units_returned weight: $S3.units_returned_weight ,  units returned number: $S3.units_returned_number"}
                    [switch]
                        variable=S3.units_returned_number

                        [case]
                            value=1

                            {MESSAGE $unit.id "" "" _"Home sweet home."}
                        [/case]

                        [case]
                            value=2

                            {MESSAGE $unit.id "" "" _"This was close!"}
                        [/case]

                        [case]
                            value=3

                            {MESSAGE $unit.id "" "" _"Here we go."}
                        [/case]

                        [else]
                            {MESSAGE $unit.id "" "" _"We all made it! Amazing ..."}
                        [/else]
                    [/switch]

                    {CLEAR_VARIABLE S3.units_returned_number}
                [/case]
            [/switch]

            # Store unit for "accounting" at end
            # Units will later also get placed back on map for recall
            [store_unit]
                [filter]
                    id=$unit.id
                [/filter]
                variable=S3.stored_returned_units
                mode=append
                kill=yes
            [/store_unit]

            # When Rutburt leaves (as the last of the units):
            {IF_VAR S3.units_returned_weight greater_than 21 (
                [then]
                    # Kill the units that are still left
                    [kill]
                        side=1
                    [/kill]

                    # Gold for all the loyal starting units
                    {VARIABLE S3.str ""}
                    {RANDOM "$Money.S3_gold_for_Grnk"}
                    {VARIABLE S3.gold_per_level $random}
                    {VARIABLE S3.total_gold 0}

                    # Go through all units and unstore them, add gold for loyal starting units
                    #  Filter by name instead of upkeep, just in case somebody else is loyal
                    {VARIABLE S3.starting_units "Grnk,Rutburt,Rutburt_unit1,Rutburt_unit2,Rutburt_unit3,Rutburt_unit4"}
                    {FOREACH S3.stored_returned_units i_u}
                        {IF_VAR S3.starting_units contains $S3.stored_returned_units[$i_u].id (
                            [then]
                                #{DEBUG "$S3.stored_returned_units[$i_u].id gets gold"}
                                {VARIABLE S3.unit_gold "$($S3.stored_returned_units[$i_u].level*$S3.gold_per_level)"}
                                {VARIABLE_OP S3.total_gold add $S3.unit_gold}
                                {VARIABLE S3.str $S3.str+"
$S3.unit_gold gold for $S3.stored_returned_units[$i_u].name (Level $S3.stored_returned_units[$i_u].level)"}
                            [/then]
                        )}
                    {NEXT i_u}

                    {MESSAGE narrator $S3.Rutburt_portrait _"Rutburt" _"Well done, chaps! After accounting for expenses, we have $S3.total_gold gold left from Faulorn's treasure. So that means:
"+$S3.str}
                    {MESSAGE narrator $S3.Grnk_portrait _"Grnk the Frail" _"Wow, that's a lot of money!"}
                    {MESSAGE narrator "$S3.Rutburt_portrait" _"Rutburt" _"Actually, it's not as much as I expected. No wonder Faulorn is sending his men on raids against the saurians, he must be pretty desperate."}
                    {MESSAGE narrator $S3.Grnk_portrait _"Grnk the Frail" _"Well, it's a lot of money to me."}
                    {MESSAGE narrator "$S3.Rutburt_portrait" _"Rutburt" _"That's good then. You did well, little fella. If you ever want to join us again, you know where to find me."}

                    # Give Grnk his money
                    {VARIABLE_OP Grnks_gold add $S3.gold_per_level}

                    # Unstore everybody
                    # Cannot unstore to recall list otherwise they will not be healed
                    # at beginning of next scenario; put on map and hide instead
                    {FOREACH S3.stored_returned_units i_u}
                        [unstore_unit]
                            variable=S3.stored_returned_units[$i_u]
                            find_vacant=yes
                        [/unstore_unit]
                        [hide_unit]
                            id=$S3.stored_returned_units[$i_u].id
                        [/hide_unit]
                    {NEXT i_u}

                    # Move Grnk back to his own side
                    {MOVE_GRNK_TO_DUMMY_SIDE 5}
                    {UNDO_GRNK_IS_LOYAL ()}
                    [hide_unit]
                        id=Grnk
                    [/hide_unit]

                    # House cleaning
                    {CLEAR_VARIABLE S3,random}
                    {REMOVE_INVENTORY_ITEM goldsack}  # just in case ...

                    [endlevel]
                        result=victory
                        bonus=no
                        carryover_add=yes
                        carryover_percentage=40
                    [/endlevel]
                [/then]
            )}
        [/event]
    [/event]

    # If Side 2 doesn't have enough units left when Rutburt reaches second keep
    # Give them gold and/or a new leader
    [event]
        name=moveto

        [filter]
            id=Rutburt
            x=30,31,31
            y=7,7,8
        [/filter]

        # If there are at most 3 Side 2 units that can make it around the top left
        [if]
            [have_unit]
                side=2
                count=0-3
                x=1-27
                y=1-25
            [/have_unit]

            [then]
                # New leader if old one is dead
                [if]
                    [have_unit]
                        side=2
                        canrecruit=yes
                    [/have_unit]

                    [then]
                        {UNIT 2 Bandit 22 16 id=woodsmen_unit2}
                    [/then]

                    [else]
                        {UNIT 2 Bandit 22 16 (id,canrecruit=woodsmen_unit2,yes)}
                    [/else]
                [/if]

                {MESSAGE woodsmen_unit2 "" "" _"What is all this commotion? Oh, it's that Rutburt guy again. It's time to put an end to that."}
                [gold]
                    side=2
                    {QUANTITY amount 31 41 51}
                [/gold]
            [/then]
        [/if]
    [/event]

    # Lose if you have less than 2 of the starting units left
    # Different speeches for other ones
    [event]
        name=last breath
        first_time_only=no

        [filter]
            side=1
            id=Rutburt_unit1,Rutburt_unit2,Rutburt_unit3,Rutburt_unit4
        [/filter]

        [store_unit]
            [filter]
                id=Rutburt_unit1,Rutburt_unit2,Rutburt_unit3,Rutburt_unit4
            [/filter]

            variable=Rutburt_units
        [/store_unit]

        # Note that the unit that just died still counts here
        [switch]
            variable=Rutburt_units.length

            [case]
                value=2

                {MESSAGE Rutburt "" "" _"No! I cannot go on with so many of my friends dead!"}
                [endlevel]
                    result=defeat
                [/endlevel]
            [/case]

            [case]
                value=3

                {MESSAGE $unit.id "" "" _"I am sorry I failed you, Rutburt."+{NOTE _"You will lose the game if one more of the loyal starting units dies."}}
            [/case]

            [case]
                value=4

                {MESSAGE Rutburt "" "" _"Not $unit.name! We've been fighting together for longer than I can remember."}
            [/case]
        [/switch]

        {CLEAR_VARIABLE Rutburt_units}
    [/event]

    # Finally, the standard events for all or most scenarios
    {STORY_IMAGE id=Grnk}
    {PICKPOCKET_EVENTS (type=Grnk the Spearman,Grnk the Rouser)}
    {POISON_ATTACK_EVENTS}
    {HEALING_POTION_MESSAGE}
    {GRNK_DEATH}
    {RUTBURT_DEATH}
[/scenario]
