#textdomain wesnoth-Grnk

#define SET_MENU_HEALING
    # Set up the healing potion menu item
    [set_menu_item]
        id=m05_menu_healing
        description=_"Use Healing & Curing Potion"
        image=items/potion-blue.png~CROP(21,21,30,30)~SCALE(20,20)
        [show_if]
        [/show_if]
        [command]
            {STORE_UNIT_VAR id=Grnk hitpoints Grnk_hp}
            {STORE_UNIT_VAR id=Grnk max_hitpoints Grnk_max_hp}
            {STORE_UNIT_VAR id=Grnk status.poisoned Grnk_poisoned}
            [if]
                {VARIABLE_CONDITIONAL Grnk_hp equals $Grnk_max_hp}
                {VARIABLE_CONDITIONAL Grnk_poisoned not_equals yes}
                [then]
                    {MESSAGE Grnk "" "" _"I'm in perfect health. No need to waste the potion right now."}
                [/then]
                [else]
                    [message]
                        message=_"Should I take the healing and curing potion?"
                        speaker=Grnk
                        [option]
                            message=_"Yes, I am desperate."
                            [command]
                                {SOUND heal.wav}
                                {FULL_HEAL_AND_CURE id=Grnk}
                                {REMOVE_INVENTORY_ITEM "healing_potion"}
                                {CLEAR_MENU_HEALING}
                                # We can, however, not clear the variable Shmaltupp.healing_potion, as it shows whether the potion was bought
                                {MESSAGE Grnk "" "" _"Wow, this stuff really works! I was afraid that I had been tricked."}
                            [/command]
                        [/option]
                        [option]
                            message=_"No, I can make it a little longer."
                        [/option]
                    [/message]
                [/else]
            [/if]
            {CLEAR_VARIABLE Grnk_hp,Grnk_max_hp,Grnk_poisoned}
        [/command]
    [/set_menu_item]
#enddef

#define CLEAR_MENU_HEALING
    # Disable the healing menu item
    [set_menu_item]
        id=m05_menu_healing
        [show_if]
            [not]
            [/not]
        [/show_if]
    [/set_menu_item]
#enddef

#define HEALING_POTION_MESSAGE
    # At the beginning of Grnk's turn (side 1), remind him that he has the healing potion
    # if his health is bad
    # but only once per scenario
    [event]
        name=side 1 turn refresh
        first_time_only=no

        {STORE_UNIT_VAR id=Grnk hitpoints Grnk_hp}
        {STORE_UNIT_VAR id=Grnk max_hitpoints Grnk_max_hp}
        [if]
            {VARIABLE_CONDITIONAL Grnk_hp less_than "$($Grnk_max_hp/2.)"}
            {VARIABLE_CONDITIONAL healing_reminder not_equals yes}
            [then]
                # Check if he has the potion
                {LOOKUP_INDEX inventory short healing_potion item_index}
                {IF_VAR item_index less_than $inventory.length (
                    [then]
                        {MESSAGE narrator "wesnoth-icon.png" "" "Remember that Grnk has the healing potion which will immediately restore his health."}
                        {VARIABLE healing_reminder yes}
                    [/then]
                )}
            [/then]
        [/if]
        {CLEAR_VARIABLE item_index,Grnk_hp,Grnk_max_hp}
    [/event]

    # Also clear the message variable at end of scenario
    [event]
        name=victory

        {CLEAR_VARIABLE healing_reminder}
    [/event]
#enddef

#define POISON_ATTACK FILTER
    # Give filtered unit the pickpocket special
    [object]
        id=posion_attack
        name=_"Assassin Poison"
        image=icons/potion_green_small.png
        duration=forever
        description=_"The assassin poison reduces a unit's hitpoints by half or 12 hitpoints per turn, whatever is more. It is used as a normal attack with two exceptions. It can only be used once and the attacking unit will immediately jump one tile back (directly away from the attacked unit) allowing for no defense action by the attacked unit. This does, however, assume that that hex is unoccupied and passable, otherwise the jump back is not possible and the attacked unit will defend itself with its melee weapon. The poison attack always has a 70% chance to hit."
        [filter]
            {FILTER}
        [/filter]
        [effect]
            apply_to=new_attack
            name=assassin poison
            description=_"assassin poison"
            type=pierce
            range=melee
            damage=0
            number=1
            icon=icons/potion_green_small.png
            [specials]
                [chance_to_hit]
                    id=assassin_poison
                    name=_"assassin poison"
                    description=_"The chance to hit is always 70%."
                    value=70
                [/chance_to_hit]
            [/specials]
        [/effect]
    [/object]
#enddef

#define POISON_ATTACK_EVENTS
    # Don't use the poison on the rats or wolves
    [event]
        name=attack
        first_time_only=no
        [filter_attack]
            name=assassin poison
        [/filter_attack]
        [filter_second]
            type=Giant Rat,Wolf
        [/filter_second]

        {MESSAGE Grnk "" "" _"On second thought, I don't think I want to waste the poison on a $second_unit.type."}
        # Interrupt the attack
        {MODIFY_UNIT id=Grnk underlying_id XXXX}
        # And give him his attack back
        {MODIFY_UNIT id=Grnk attacks_left 1}
    [/event]

    # The actual attack events (one for hit, one for miss)
    [event]
        # If hit, poison unit and jump back
        name=attacker hits
        [filter_attack]
            name=assassin poison
        [/filter_attack]
        [filter_second]
            [not]
                type=Giant Rat
            [/not]
        [/filter_second]

        {SOUND poison.ogg}
        # Add red overlay, and make unit unhealable
        [object]
            silent=yes
            [filter]
                id=$second_unit.id
            [/filter]
            [effect]
                apply_to=image_mod
                replace="R(128)"
            [/effect]
        [/object]
        {MODIFY_UNIT (id=$second_unit.id) variables.assassin_poison yes}
        {MODIFY_UNIT (id=$second_unit.id) status.unhealable yes}

        # Also take away poison attack from Grnk
        {REMOVE_INVENTORY_ITEM "assassin_poison"}
        [object]
            silent=yes
            [filter]
                id=$unit.id
            [/filter]
            [effect]
                apply_to=remove_attacks
                name=assassin poison
            [/effect]
        [/object]

        {JUMP_BACK Grnk $second_unit.x $second_unit.y}
        {IF_VAR jumped equals yes (
            [then]
                {MESSAGE Grnk "" "" _"I did it!"}

                # Also fire an 'attack end' event, in order to trigger certain events in the scenarios
                [fire_event]
                    name=attack end
                    [primary_unit]
                        id=$unit.id
                    [/primary_unit]
                    [secondary_unit]
                        id=$second_unit.id
                    [/secondary_unit]
                    [primary_attack]
                        name=assassin poison
                    [/primary_attack]
                    [secondary_attack]
                        name=$second_weapon.name
                    [/secondary_attack]
                [/fire_event]
            [/then]
            [else]
                {MESSAGE Grnk "" "" _"Damn, my way is blocked! But at least I administered the poison."}
            [/else]
        )}
        {CLEAR_VARIABLE jumped}
    [/event]

    [event]
        # If miss, just jump back
        name=attacker misses
        [filter_attack]
            name=assassin poison
        [/filter_attack]
        [filter_second]
            [not]
                type=Giant Rat
            [/not]
        [/filter_second]

        {JUMP_BACK Grnk $second_unit.x $second_unit.y}
        {IF_VAR jumped equals yes (
            [then]
                {MESSAGE Grnk "" "" _"Damn, I missed!"}

                # Also fire an 'attack end' event, in order to trigger certain events in the scenarios
                [fire_event]
                    name=attack end
                    [primary_unit]
                        id=$unit.id
                    [/primary_unit]
                    [secondary_unit]
                        id=$second_unit.id
                    [/secondary_unit]
                    [primary_attack]
                        name=assassin poison
                    [/primary_attack]
                    [secondary_attack]
                        name=$second_weapon.name
                    [/secondary_attack]
                [/fire_event]
            [/then]
            [else]
                {MESSAGE Grnk "" "" _"Damn, my way is blocked! And on top of that I missed!"}
            [/else]
        )}
        {CLEAR_VARIABLE jumped}
    [/event]

    # The event reducing the health of the hit unit
    [event]
        name=turn refresh
        first_time_only=no

        [store_unit]
            [filter]
                side=$side_number
                [filter_wml]
                    [variables]
                        assassin_poison=yes
                    [/variables]
                [/filter_wml]
            [/filter]
            variable=poisoned_unit
        [/store_unit]
        #{MESSAGE narrator "" "" "Poisoned units: $poisoned_unit.length"}

        # If we have a poisoned unit, reduce health or kill
        {IF_VAR poisoned_unit.length not_equals 0 (
            [then]
                {SOUND poison.ogg}
                {STORE_UNIT_VAR (id=$poisoned_unit.id) hitpoints poisoned_unit_hp}
                {IF_VAR poisoned_unit_hp less_than 13 (
                    [then]
                        {MESSAGE $poisoned_unit.id "" "" _"Arrgh!!!"}
                        # The following line is unnecessary, except to make sure
                        # some die events fire correctly in the scenarios
                        {MODIFY_UNIT (id=$poisoned_unit.id) hitpoints 0}
                        [kill]
                            id=$poisoned_unit.id
                            animate=yes
                            fire_event=yes
                            [secondary_unit]
                                id=Grnk
                            [/secondary_unit]
                        [/kill]
                    [/then]
                    [else]
                        {IF_VAR poisoned_unit_hp greater_than 24 (
                            [then]
                                {MODIFY_UNIT (id=$poisoned_unit.id) hitpoints "$($poisoned_unit_hp/2)"}
                            [/then]
                            [else]
                                {MODIFY_UNIT (id=$poisoned_unit.id) hitpoints "$($poisoned_unit_hp-12)"}
                            [/else]
                        )}
                    [/else]
                )}
            [/then]
        )}

        {CLEAR_VARIABLE poisoned_unit,poisoned_unit_hp}
    [/event]
#enddef
