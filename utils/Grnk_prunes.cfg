#textdomain wesnoth-Grnk

#ifdef CAMPAIGN_GRNK_PART_2
#define PRUNES_ADVANCE PRUNES_UNIT_ID
    # Advancement system for prunes (Part 2 only)
    [message]
        speaker=narrator
        image="items/ball-blue.png~CROP(26,16,20,40)~SCALE(20,20)~CS(-50,-100,-100)"
        message=_"Grnk's continuing practice with the prunes is paying off.
Choose one of the following improvements to his prunes mastery:"
        [option]
            message= _ "New prunes effect: convert an enemy unit to Grnk's side for one turn"
             [show_if]
                 [not]
                     [variable]
                         name=prunes_cfg.events
                         contains=join
                     [/variable]
                 [/not]
             [/show_if]
            [command]
                {VARIABLE prunes_cfg.events $prunes_cfg.events+",join"}
            [/command]
        [/option]
        [option]
            message= _ "New prunes effect: demote enemy unit to lowest level in its advancement line"
            [show_if]
                [not]
                    [variable]
                        name=prunes_cfg.events
                        contains=demote
                    [/variable]
                [/not]
            [/show_if]
            [command]
                {VARIABLE prunes_cfg.events $prunes_cfg.events+",demote"}
            [/command]
        [/option]
        [option]
            message= _ "New prunes effect: damage all close units by small random amount (0-8 hitpoints)"
            [show_if]
                [not]
                    [variable]
                        name=prunes_cfg.events
                        contains=damage_all
                    [/variable]
                [/not]
            [/show_if]
            [command]
                {VARIABLE prunes_cfg.events $prunes_cfg.events+",damage_all"}
            [/command]
        [/option]
        [option]
            message= _ "Increase success rate and amount for damaging all close units
to 85% success rate and maximum damage of 12 HP (currently: 67% and 8 HP)"
            [show_if]
                [variable]
                    name=prunes_cfg.events
                    contains=damage_all
                [/variable]
                [variable]
                    name=prunes_cfg.damage_all_random
                    equals="-3..8"
                [/variable]
            [/show_if]
            [command]
                {VARIABLE prunes_cfg.damage_all_random "-1..12"}
            [/command]
        [/option]
        [option]
            message= _ "Add ability to choose which effects prunes should have (50% chance of successful choice)"
            [show_if]
                [variable]
                    name=prunes_cfg.select_chance
                    equals=0
                [/variable]
            [/show_if]
            [command]
                {VARIABLE prunes_cfg.select_chance 50}
            [/command]
        [/option]
        [option]
            message= _ "Improve ability to choose which effect prunes should have
to 75% chance of successful choice (currently: 50%)"
            [show_if]
                [variable]
                    name=prunes_cfg.select_chance
                    equals=50
                [/variable]
            [/show_if]
            [command]
                {VARIABLE prunes_cfg.select_chance 75}
            [/command]
        [/option]
        [option]
            message= _ "Improve ability to choose which effect prunes should have
to 90% chance of successful choice (currently: 75%)"
            [show_if]
                [variable]
                    name=prunes_cfg.select_chance
                    equals=75
                [/variable]
            [/show_if]
            [command]
                {VARIABLE prunes_cfg.select_chance 90}
            [/command]
        [/option]
        [option]
            message= _ "Reduce chance of prunes failing to 10% (currently: 25%)"
            [show_if]
                [variable]
                    name=prunes_cfg.puff_chance
                    equals=25
                [/variable]
            [/show_if]
            [command]
                {VARIABLE prunes_cfg.puff_chance 10}
            [/command]
        [/option]
        [option]
            message= _ "Increase prunes' range by 1 hex (currently: $prunes_cfg.radius hexes)"
            [command]
                {VARIABLE_OP prunes_cfg.radius add 1}
            [/command]
        [/option]
    [/message]
#enddef
#endif

#define PRUNES_PUFF PRUNES_UNIT_ID X Y
    {PUFF {X} {Y} "~GS()~CS(100,50,100)" torch-miss.ogg}

    # Display a message the first time the puff happens
    {IF_VAR prunes_cfg.comments.puff not_equals yes (
        [then]
            {MESSAGE {PRUNES_UNIT_ID} "" "" _"I guess them prunes don't work every time."}
            {VARIABLE prunes_cfg.comments.puff yes}
        [/then]
    )}
#enddef

#define PRUNES_SUCCESS PRUNES_UNIT_ID PRUNES_EVENT PRUNES_MESSAGE
#ifdef CAMPAIGN_GRNK_PART_1
    # Display a message the first time any prune event is successful (Part 1 only)
    {IF_VAR prunes_cfg.comments.first_time_success not_equals yes (
        [then]
            {MESSAGE {PRUNES_UNIT_ID} "" "" _"Whoa, that's cool!"}
            {VARIABLE prunes_cfg.comments.first_time_success yes}
        [/then]
    )}
#endif

    # Display a message the first time a specific prunes event is successful
    {IF_VAR prunes_cfg.comments.{PRUNES_EVENT} not_equals yes (
        [then]
            {MESSAGE {PRUNES_UNIT_ID} "" "" {PRUNES_MESSAGE}}
            {VARIABLE prunes_cfg.comments.{PRUNES_EVENT} yes}
        [/then]
    )}

#ifdef CAMPAIGN_GRNK_PART_2
    # Check whether Grnk should get new prunes abilities (Part 2 only)
    {VARIABLE_OP prunes_cfg.success_counter add 1}
    {DEBUG "Prunes success counter: $prunes_cfg.success_counter/$prunes_cfg.successes_needed"}

    {IF_VAR prunes_cfg.success_counter greater_than_equal_to $prunes_cfg.successes_needed (
        [then]
            {RANDOM "1..1"}
            {DEBUG "Random (1..3): $random"}
            {IF_VAR random equals 1 (
               [then]
                   {PRUNES_ADVANCE {PRUNES_UNIT_ID}}
                   {VARIABLE prunes_cfg.success_counter 0}
                   {VARIABLE_OP prunes_cfg.successes_needed add 1}
               [/then]
            )}
            {CLEAR_VARIABLE random}
        [/then]
    )}
#endif
#enddef

#define PRUNES_EVENTS PRUNES_UNIT_ID ENEMY_SIDES TELE_TO_X TELE_TO_Y NOT_TERRAIN
    # One event for each of the prunes actions
    # The rely on certain variables to be set in the other parts of the code, not to be used in isolation

    # Unsuccessful prune event.  Used in Part 1 & 2
    [event]
        name=prunes_puff
        first_time_only=no

        {PRUNES_PUFF {PRUNES_UNIT_ID} $prunes.unit1.x $prunes.unit1.y}
    [/event]

    # Petrify enemy unit.  Used in Part 1 & 2
    [event]
        name=prunes_petrify
        first_time_only=no

        {FIREBALL $prunes.unit1.x $prunes.unit1.y "~GS()~CS(100,50,100)" fire.wav (
            [petrify]
                id=$prunes.unit1.id
            [/petrify]
        )}

        {PRUNES_SUCCESS {PRUNES_UNIT_ID} petrify _"You won't be going anywhere anytime soon!
<i>[Note: The magical prunes will have no further effect on petrified units.]</i>"}

        # In Part 1 S13, this could trigger one of the enemy leaders to leave ...
        [fire_event]
            name=enemy_leader_leaves
        [/fire_event]
        # ... or the end of the scenario
        [fire_event]
            name=are_we_done
        [/fire_event]
    [/event]

    # Teleport enemy unit away.  Used in Part 1 & 2
    [event]
        name=prunes_teleport
        first_time_only=no

        {TELEPORT_AWAY2 id=$prunes.unit1.id {TELE_TO_X} {TELE_TO_Y} {NOT_TERRAIN} "~CS(0,-50,0)"}

        {PRUNES_SUCCESS {PRUNES_UNIT_ID} teleport _"Away with you!
"+{WHISPER _"If only I knew how to do this intentionally."}}
    [/event]

    # Have two enemy units fight to the death.  Used in Part 1 & 2
    [event]
        name=prunes_berserk
        first_time_only=no

        # Find the closest enemy unit to the selected enemy unit that is not petrified
        {FIND_CLOSEST_HEX $prunes.unit1.x $prunes.unit1.y (
            [filter]
                side={ENEMY_SIDES}
                [not]
                    id=$prunes.unit1.id
                [/not]
                [filter_wml]
                    [not]
                        [status]
                            petrified=yes
                        [/status]
                    [/not]
                [/filter_wml]
            [/filter]
        )}

        # If there is a unit to attack, fight until one of them is dead
        # otherwise, just a puff again
        {IF_VAR hex_x not_equals -1 (
            [then]  # If there is a unit to attack
                {LEADING_HALO $prunes.unit1.x $prunes.unit1.y "~CROP(0,20,72,52)~SCALE(0,120)~CS(0,-50,0)" (entangle.wav)}

                # Need to store this unit as all kinds of parameters are needed
                [store_unit]
                    [filter]
                        x,y=$hex_x,$hex_y
                    [/filter]
                    variable=prunes.unit2
                [/store_unit]
                #{DEBUG "Unit to attack at: $hex_x $hex_y: $prunes.unit2.id"}

                # If they are not already adjacent, move the first unit
                [if]
                    [not]
                        [have_unit]
                            id=$prunes.unit2.id
                            [filter_adjacent]
                                id=$prunes.unit1.id
                            [/filter_adjacent]
                        [/have_unit]
                    [/not]
                    [then]
                        {CLOSE_EMPTY_HEX $prunes.unit2.x $prunes.unit2.y {NOT_TERRAIN} 1}
                        {MOVE_UNIT id=$prunes.unit1.id $hex_x $hex_y}
                        {CLEAR_VARIABLE hex_x,hex_y}
                    [/then]
                [/if]

                {FIGHT_TO_DEATH $prunes.unit1.id $prunes.unit2.id yes}

                {PRUNES_SUCCESS {PRUNES_UNIT_ID} berserk  _"That's right!  Fight each other, not us."}
            [/then]
            [else]  # Otherwise, there's just a puff
                {PRUNES_PUFF {PRUNES_UNIT_ID} $prunes.unit1.x $prunes.unit1.y}
            [/else]
        )}
    [/event]

    # Have unit join Grnk's side.  Used in Part 2 only.
    [event]
        name=prunes_join
        first_time_only=no

        {LEADING_HALO $prunes.unit1.x $prunes.unit1.y "~CROP(0,20,72,52)~SCALE(0,120)~CS(0,-50,0)" (entangle.wav)}

        {VARIABLE prunes_cfg.joined_unit.id $prunes.unit1.id}
        {VARIABLE prunes_cfg.joined_unit.side $prunes.unit1.side}

        {STORE_UNIT_VAR id={PRUNES_UNIT_ID} side prunes_cfg.joined_unit.new_side}
        [modify_unit]
            [filter]
                id=$prunes.unit1.id
            [/filter]
            side=$prunes_cfg.joined_unit.new_side
            moves=$prunes.unit1.max_moves
            attacks_left=1
        [/modify_unit]

        {PRUNES_SUCCESS {PRUNES_UNIT_ID} join _"Here, en'my, en'my, en'my... Join me!
<i>[Note: Remember that this effect only lasts one turn.]</i>"}

        [event]
            name="side $prunes_cfg.joined_unit.new_side turn,victory"

            #{DEBUG "Turning $prunes_cfg.joined_unit.id back to side $prunes_cfg.joined_unit.side"}
            [modify_unit]
                [filter]
                    id=$prunes_cfg.joined_unit.id
                [/filter]
                side=$prunes_cfg.joined_unit.side
            [/modify_unit]

            {CLEAR_VARIABLE prunes_cfg.joined_unit}
        [/event]
    [/event]

    # Demote unit to lowest level in its unit type line.  Used in Part 2 only.
    [event]
        name=prunes_demote
        first_time_only=no

        [lua]
            code = <<
                local adv = wesnoth.require "~/add-ons/Grnk/lua/advances_from.lua"
                wesnoth.set_variable("prunes.from_type", adv.advances_from(wesnoth.get_variable("prunes.unit1.type"), -1))
            >>
        [/lua]

        {LEADING_HALO $prunes.unit1.x $prunes.unit1.y "~CROP(0,20,72,52)~SCALE(0,120)~CS(0,-50,0)" (entangle.wav)}

        {IF_VAR prunes.from_type not_equals "" (
            [then]
                # New unit shall have same percentage of max_hitpoints as old one
                {VARIABLE prunes.hp_ratio "$((1.0 * $prunes.unit1.hitpoints) / (1.0 * $prunes.unit1.max_hitpoints))"}

                [transform_unit]
                    id=$prunes.unit1.id
                    transform_to=$prunes.from_type
                [/transform_unit]

                # Store unit again, to get new HP right
                [store_unit]
                    [filter]
                        id=$prunes.unit1.id
                    [/filter]
                    variable=prunes.unit1
                [/store_unit]

                {VARIABLE prunes.new_hp "$($prunes.unit1.max_hitpoints * $prunes.hp_ratio)"}

                # Needs to be 1 HP minimum
                {IF_VAR prunes.new_hp less_than 1 (
                    [then]
                        {VARIABLE prunes.new_hp 1}
                    [/then]
                )}

                [modify_unit]
                    [filter]
                        id=$prunes.unit1.id
                    [/filter]
                    hitpoints=$prunes.new_hp
                    experience=0
                [/modify_unit]

                {PRUNES_SUCCESS {PRUNES_UNIT_ID} demote _"Hah!  Start over, scumbag!"}
            [/then]
            [else]
                {PRUNES_PUFF {PRUNES_UNIT_ID} $prunes.unit1.x $prunes.unit1.y}
            [/else]
        )}
    [/event]

    # Damage all units within prunes_cfg.radius.  Used in Part 2 only.
    [event]
        name=prunes_damage_all
        first_time_only=no

        {VARIABLE prunes.success no}

        {FOREACH prunes.all_units i}
            {RANDOM $prunes_cfg.damage_all_random}
            #{DEBUG "damage unit: $i $prunes.all_units[$i].id $random"}

            {IF_VAR random greater_than 0 (
                [then]
                    {IF_VAR random greater_than $prunes.all_units[$i].hitpoints (
                        [then]
                            {VARIABLE random $prunes.all_units[$i].hitpoints}
                        [/then]
                    )}
                    {VARIABLE_OP prunes.all_units[$i].hitpoints sub $random}

                    {QUICKBURST $prunes.all_units[$i].x $prunes.all_units[$i].y "~GS()~CS(50,0,50)" fire.wav (
                        [unstore_unit]
                            variable=prunes.all_units[$i]
                            text=$random
                            red,green,blue=120,60,120
                        [/unstore_unit]
                    )}

                    {IF_VAR prunes.all_units[$i].hitpoints less_than 1 (
                        [then]
                            [kill]
                                id=$prunes.all_units[$i].id
                                animate=yes
                            [/kill]
                        [/then]
                    )}

                    {VARIABLE prunes.success yes}
                [/then]
                [else]
                    {PRUNES_PUFF {PRUNES_UNIT_ID} $prunes.all_units[$i].x $prunes.all_units[$i].y}
                [/else]
            )}
        {NEXT i}

        {IF_VAR prunes.success equals yes (
            [then]
                # Store temporary variable to see if this was the first time this effect took place
                {IF_VAR prunes_cfg.comments.damage_all not_equals yes (
                    [then]
                        {VARIABLE prunes.first_time_damage_all yes}
                    [/then]
                )}

                {PRUNES_SUCCESS {PRUNES_UNIT_ID} damage_all _"Ouch, that hurt!  I better be careful with this one."}

                # If it was not the first time, there might be some weird side effect
                {IF_VAR prunes.first_time_damage_all not_equals yes (
                    [then]
                        # 20% chance of something weird happening
                        {RANDOM "1..5"}
                        {DEBUG "Side effect damage_all random: $random"}
                        {IF_VAR random equals 1 (
                            [then]
                                {RANDOM "1..3"}
                                [switch]
                                    variable=random
                                    [case]  # Can't use prunes for two turns
                                        value=1

                                        {MESSAGE {PRUNES_UNIT_ID} "" "" _"Damn, that hurts!  I really need a break from them prunes.
<i>[Note: Grnk will not be able to use the prunes for the next 2 turns of this scenario.]</i>"}

                                        [event]
                                            name="side 1 turn"  # prunes menu is set during 'new turn' event
                                            {CLEAR_MENU_PRUNES}
                                            [event]
                                                name="side 1 turn"
                                                {CLEAR_MENU_PRUNES}
                                            [/event]
                                        [/event]
                                    [/case]

                                    [case]  # Grnk acts "drunk"
                                        value=2

                                        # Store non-"drunk" Grnk for restoration when he's "sober" again
                                        [store_unit]
                                            [filter]
                                                id={PRUNES_UNIT_ID}
                                            [/filter]
                                            variable=prunes.tmp_unit
                                        [/store_unit]

                                        # Add blue overlay
                                        [object]
                                            silent=yes
                                            [filter]
                                                id={PRUNES_UNIT_ID}
                                            [/filter]
                                            [effect]
                                                apply_to=image_mod
                                                replace="B(128)"
                                            [/effect]
                                        [/object]

                                        {MESSAGE {PRUNES_UNIT_ID} "" "" _"Ugh, I don't feel so good ..."}
                                        {REPEAT 4 (
                                            [store_reachable_locations]
                                                [filter]
                                                    id={PRUNES_UNIT_ID}
                                                [/filter]
                                                [filter_location]  # unoccupied by other unit
                                                    [not]
                                                        [filter]
                                                            [not]
                                                                id={PRUNES_UNIT_ID}
                                                            [/not]
                                                        [/filter]
                                                    [/not]
                                                [/filter_location]
                                                variable=prunes.tmp_locs
                                            [/store_reachable_locations]

                                            {RANDOM "1..$prunes.tmp_locs.length"}
                                            {VARIABLE_OP random sub 1}
                                            {MOVE_UNIT_IMAGEMODS id={PRUNES_UNIT_ID} $prunes.tmp_locs[$random].x $prunes.tmp_locs[$random].y "B(128)"}

                                            [switch]
                                                variable=REPEAT_i

                                                [case]
                                                    value=0
                                                    {MESSAGE {PRUNES_UNIT_ID} "" "" _"When did the ground start moving like that?"}
                                                [/case]
                                                [case]
                                                    value=1
                                                    {MESSAGE {PRUNES_UNIT_ID} "" "" _"This is Shmalltupp Lager all over again!!"}
                                                [/case]
                                                [case]
                                                    value=2
                                                    {MESSAGE {PRUNES_UNIT_ID} "" "" _"I'm getting too old for this!"}
                                                [/case]
                                                [else]
                                                    {MESSAGE {PRUNES_UNIT_ID} "" "" _"Whoa!"}
                                                [/else]
                                            [/switch]
                                        )}
                                        {MOVE_UNIT_IMAGEMODS id={PRUNES_UNIT_ID} $prunes.tmp_unit.x $prunes.tmp_unit.y "B(128)"}

                                        # Restore the non-"drunk" Grnk
                                        [unstore_unit]
                                            variable=prunes.tmp_unit
                                        [/unstore_unit]
                                        {MESSAGE {PRUNES_UNIT_ID} "" "" _"Ahh, that's better."}
                                    [/case]

                                    [case]  # Turn Grnk into a ghast for one turn
                                        value=3

                                        [store_unit]
                                            [filter]
                                                id={PRUNES_UNIT_ID}
                                            [/filter]
                                            variable=prunes_cfg.unit_before_ghast
                                            kill=yes
                                        [/store_unit]

                                        # Don't transform the unit, as we don't want all the special stuff
                                        [unit]
                                            type=Ghast
                                            id={PRUNES_UNIT_ID}
                                            name= _ "Ghastly Grnk"
                                            # Set all the current properties of Grnk for the ghast
                                            x,y=$prunes_cfg.unit_before_ghast.x,$prunes_cfg.unit_before_ghast.y
                                            canrecruit=$prunes_cfg.unit_before_ghast.canrecruit
                                            experience=$prunes_cfg.unit_before_ghast.experience
                                            max_experience=999  # ghast may not advance during its turn
                                            hitpoints=$prunes_cfg.unit_before_ghast.hitpoints
                                            max_hitpoints=$prunes_cfg.unit_before_ghast.max_hitpoints
                                            moves=$prunes_cfg.unit_before_ghast.moves
                                            max_moves=$prunes_cfg.unit_before_ghast.max_moves
                                            attacks_left=$prunes_cfg.unit_before_ghast.attacks_left
                                        [/unit]

                                        {MESSAGE {PRUNES_UNIT_ID} "" "" _"Crap! I turned myself into a ghast."}

                                        [event]
                                            name="side $prunes_cfg.unit_before_ghast.side turn,victory"

                                            [store_unit]
                                                [filter]
                                                    id={PRUNES_UNIT_ID}
                                                [/filter]
                                                variable=prunes.tmp_unit
                                                kill=yes
                                            [/store_unit]

                                            {VARIABLE prunes_cfg.unit_before_ghast.x $prunes.tmp_unit.x}
                                            {VARIABLE prunes_cfg.unit_before_ghast.y $prunes.tmp_unit.y}
                                            {VARIABLE prunes_cfg.unit_before_ghast.experience $prunes.tmp_unit.experience}
                                            {VARIABLE prunes_cfg.unit_before_ghast.hitpoints $prunes.tmp_unit.hitpoints}

                                            [unstore_unit]
                                                variable=prunes_cfg.unit_before_ghast
                                                advance=true
                                                fire_event=true
                                            [/unstore_unit]

                                            {CLEAR_VARIABLE prunes_cfg.unit_before_ghast}
                                            {MESSAGE {PRUNES_UNIT_ID} "" "" _"Phew.  That was ... unpleasant."}
                                        [/event]
                                    [/case]
                                [/switch]
                            [/then]
                        )}
                    [/then]
                )}
            [/then]
        )}

        {CLEAR_VARIABLE random}
    [/event]

#enddef

#define SET_MENU_PRUNES PRUNES_UNIT_ID ENEMY_SIDES TELE_TO_X TELE_TO_Y NOT_TERRAIN
    [set_menu_item]
        id=m09_menu_prunes
        description=_"Use magical prunes"
        image=items/ball-blue.png~CROP(26,16,20,40)~SCALE(20,20)~CS(-50,-100,-100)
        [show_if]
        [/show_if]
        [default_hotkey]
            key=p
            shift=yes
        [/default_hotkey]
        [command]
            # Get main unit's location location
            {STORE_UNIT_VAR id={PRUNES_UNIT_ID} x prunes.x}
            {STORE_UNIT_VAR id={PRUNES_UNIT_ID} y prunes.y}
            {SCROLL_TO $prunes.x $prunes.y}

#ifdef CAMPAIGN_GRNK_PART_1
            # First time he tries to use one (Part 1 only)
            {IF_VAR prunes_cfg.comments.first_time_attempt not_equals yes (
                [then]
                    {MESSAGE {PRUNES_UNIT_ID} "" "" _"Maybe if I throw them up into the air?"}
                    {VARIABLE prunes_cfg.comments.first_time_attempt yes}
                [/then]
            )}
#endif

            # See if there is an enemy_unit unit within prunes_cfg.radius hexes
            # Non-petrified units only
            [store_unit]
                [filter]
                    side={ENEMY_SIDES}
                    [filter_wml]
                        [not]
                            [status]
                                petrified=yes
                            [/status]
                        [/not]
                    [/filter_wml]
                    [filter_location]
                        x,y=$prunes.x,$prunes.y
                        radius=$prunes_cfg.radius
                    [/filter_location]
                [/filter]
                variable=prunes.all_units
            [/store_unit]
            #{DEBUG "Number of close enough units: $prunes.all_units.length"}

            # Now pick one of those units randomly
            # If there is none, make a puff at main unit's location,
            # Otherwise, perform all the prune actions
            {IF_VAR prunes.all_units.length less_than 1 (
                [then]
                    {PUFF $prunes.x $prunes.y "~GS()~CS(100,50,100)" torch-miss.ogg}
                    {MESSAGE {PRUNES_UNIT_ID} "" "" _"Rats!  I'm not close enough to an enemy unit."}
                [/then]
                [else]
                    # Store the (randomly) selected unit in prunes.unit1
                    {VARIABLE prunes.i $prunes.all_units.length}
                    {VARIABLE_OP prunes.i add -1}
                    {RANDOM 0..$prunes.i}
                    [store_unit]
                        [filter]
                            id=$prunes.all_units[$random].id
                        [/filter]
                        variable=prunes.unit1
                    [/store_unit]
                    #{DEBUG "Selected unit: $random $prunes.unit1.id"}

                    # Now select one action at random
                    {IF_VAR prunes_cfg.select_chance equals 0 (
                        [then]
                            {RANDOM $prunes_cfg.events}
                            {VARIABLE prunes.chosen_event $random}
                        [/then]
                        [else]
                            [message]
                                speaker=narrator
                                image="items/ball-blue.png~CROP(26,16,20,40)~SCALE(20,20)~CS(-50,-100,-100)"
                                message=_"What effect should the prunes have?  Chance of successful choice: $prunes_cfg.select_chance%"
                                [option]
                                    message="&items/dragonstatue.png~CROP(12,1,48,48)=" + _"Petrify enemy unit"
                                    [show_if]
                                        [variable]
                                            name=prunes_cfg.events
                                            contains=petrify
                                        [/variable]
                                    [/show_if]
                                    [command]
                                        {VARIABLE prunes.chosen_event petrify}
                                    [/command]
                                [/option]
                                [option]
                                    message="&halo/teleport-7.png~CROP(5,5,48,48)~GS()~CS(0,-50,0)=" + _"Teleport enemy unit away"
                                    [show_if]
                                        [variable]
                                            name=prunes_cfg.events
                                            contains=teleport
                                        [/variable]
                                    [/show_if]
                                    [command]
                                        {VARIABLE prunes.chosen_event teleport}
                                    [/command]
                                [/option]
                                [option]
                                    message="&attacks/frenzy.png~CROP(6,6,48,48)=" + _"Make two enemy units go berserk on each other"
                                    [show_if]
                                        [variable]
                                            name=prunes_cfg.events
                                            contains=berserk
                                        [/variable]
                                    [/show_if]
                                    [command]
                                        {VARIABLE prunes.chosen_event berserk}
                                    [/command]
                                [/option]
                                [option]
                                    message="&attacks/sword-holy.png~CROP(6,6,48,48)=" + _"Convert enemy unit to Grnk's side for one turn"
                                    [show_if]
                                        [variable]
                                            name=prunes_cfg.events
                                            contains=join
                                        [/variable]
                                    [/show_if]
                                    [command]
                                        {VARIABLE prunes.chosen_event join}
                                    [/command]
                                [/option]
                                [option]
                                    message="&units/human-peasants/ruffian.png~CROP(11,15,48,48)=" + _"Demote enemy unit"
                                    [show_if]
                                        [variable]
                                            name=prunes_cfg.events
                                            contains=demote
                                        [/variable]
                                    [/show_if]
                                    [command]
                                        {VARIABLE prunes.chosen_event demote}
                                    [/command]
                                [/option]
                                [option]
                                    message="&projectiles/fire-burst-small-4.png~CROP(6,8,48,48)~GS()~CS(50,0,50)=" + _"Damage all close units"
                                    [show_if]
                                        [variable]
                                            name=prunes_cfg.events
                                            contains=damage_all
                                        [/variable]
                                    [/show_if]
                                    [command]
                                        {VARIABLE prunes.chosen_event damage_all}
                                    [/command]
                                [/option]
                            [/message]

                            # Now run RNG to see if we go with selected effect, or use random one after all
                            {RANDOM 1..100}
                            #{DEBUG "RNG for selection: $random"}
                            {IF_VAR random greater_than $prunes_cfg.select_chance (
                                [then]
                                    #{DEBUG "Choosing prune effect randomly after all"}
                                    {RANDOM $prunes_cfg.events}
                                    {VARIABLE prunes.chosen_event $random}
                                [/then]
                            )}
                        [/else]
                    )}

                    {LEADING_HALO $prunes.x $prunes.y "~CROP(0,20,72,52)~SCALE(0,120)~CS(0,-50,0)" (entangle.wav)}

                    # Prunes do not work on the leaders of the enemy sides
                    {IF_VAR prunes.unit1.canrecruit equals yes (
                        [then]
                            {VARIABLE prunes.chosen_event "puff"}
                        [/then]
                    )}

                    # Finally, there is a certain chance of the prunes failing, no matter what has happened so far
                    {RANDOM "0..99"}
                    #{DEBUG "Puff chance random: $random ($prunes_cfg.puff_chance)"}
                    {IF_VAR random less_than $prunes_cfg.puff_chance (
                        [then]
                            #{DEBUG "Forcing a puff"}
                            {VARIABLE prunes.chosen_event "puff"}
                        [/then]
                    )}

                    [fire_event]
                        name=prunes_$prunes.chosen_event
                    [/fire_event]

                    # This will not work on the leaders of the enemy sides
                    {IF_VAR prunes.unit1.canrecruit equals yes (
                        [then]
                            {MESSAGE $prunes.unit1.id "" "" _"Hah, your little magic tricks don't work on me.  The Master's powers protect me."}
                        [/then]
                    )}
                [/else]
            )}
            {CLEAR_VARIABLE prunes,random,hex_x,hex_y}

            # Can only be used once per turn, reset at beginning of next turn
            {CLEAR_MENU_PRUNES}
        [/command]
    [/set_menu_item]
#enddef

#define CLEAR_MENU_PRUNES
    # Disable menu item: prunes
    [set_menu_item]
        id=m09_menu_prunes
        [show_if]
            [not]
            [/not]
        [/show_if]
    [/set_menu_item]
#enddef

#define PRUNES_SETUP PRUNES_UNIT_ID ENEMY_SIDES TELE_TO_X TELE_TO_Y NOT_TERRAIN
    # Set up the prunes event, the menu item, and an event that resets the menu item
    # at the beginning of each turn, as it is disabled after each use (can only be used once per turn)
    # PRUNES_UNIT_ID: unit which does the actions
    # ENEMY_SIDES: side(s) against which these actions are performed
    # TELE_TO_X TELE_TO_Y: Location for teleport; not onto terrain NOT_TERRAIN

    {PRUNES_EVENTS {PRUNES_UNIT_ID} {ENEMY_SIDES} {TELE_TO_X} {TELE_TO_Y} {NOT_TERRAIN}}
    {SET_MENU_PRUNES {PRUNES_UNIT_ID} {ENEMY_SIDES} {TELE_TO_X} {TELE_TO_Y} {NOT_TERRAIN}}
    [event]
        name=new turn
        first_time_only=no

        {SET_MENU_PRUNES {PRUNES_UNIT_ID} {ENEMY_SIDES} {TELE_TO_X} {TELE_TO_Y} {NOT_TERRAIN}}
    [/event]
#enddef

#define PRUNES_INIT
    # Initialize the prunes configuration before they are used for the first time
    # This only gets done once per campaign, not in each scenario

    {VARIABLE prunes_cfg.events "petrify,teleport,berserk"}
    #{VARIABLE prunes_cfg.events "petrify,teleport,berserk,join,demote,damage_all"}
    {VARIABLE prunes_cfg.radius 2}
    {VARIABLE prunes_cfg.select_chance 0}
    {VARIABLE prunes_cfg.puff_chance 25}

#ifdef CAMPAIGN_GRNK_PART_2
    {VARIABLE prunes_cfg.damage_all_random "-3..8"}
    {VARIABLE prunes_cfg.success_counter 5}  # Start Grnk with some experience from Part 1 already
    {VARIABLE prunes_cfg.successes_needed 8}

    # Need no first_time comments for the effects that were present in Part 1 already
    {VARIABLE prunes_cfg.comments.puff yes}
    {VARIABLE prunes_cfg.comments.petrify yes}
    {VARIABLE prunes_cfg.comments.teleport yes}
    {VARIABLE prunes_cfg.comments.berserk yes}
#endif
#enddef
